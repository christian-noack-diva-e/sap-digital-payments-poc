{
  "openapi": "3.0.0",
  "info": {
    "title": "SAP digital payments add-on",
    "version": "v1"
  },
  "servers": [],
  "paths": {
    "/cards/{token}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES",
                  "PaymentCardType": "DPVI",
                  "PaymentCardExpirationMonth": "04",
                  "PaymentCardExpirationYear": "2019",
                  "PaymentCardMaskedNumber": "************4823",
                  "PaymentCardHolderName": "John Doe"
                },
                "schema": {
                  "$ref": "#/components/schemas/getCardResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "description": "Provides the payment card data that was registered with the payment card token created by the SAP digital payments add-on",
        "operationId": "GET_cards-token"
      },
      "parameters": [
        {
          "name": "token",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Payment card token provided by the SAP digital payments add-on (PaytCardByDigitalPaymentSrvc). Maximum length: 25 characters\n"
        }
      ]
    },
    "/cards/expiring": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "PaymentCards": [
                    {
                      "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES",
                      "PaymentCardType": "DPVI",
                      "PaymentCardExpirationMonth": "04",
                      "PaymentCardExpirationYear": "2019",
                      "PaymentCardMaskedNumber": "************4823",
                      "PaymentCardHolderName": "John Doe",
                      "PaytCardRegnLifeCycleType": "01"
                    },
                    {
                      "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES",
                      "PaymentCardType": "DPMC",
                      "PaymentCardExpirationMonth": "12",
                      "PaymentCardExpirationYear": "2018",
                      "PaymentCardMaskedNumber": "************9541",
                      "PaymentCardHolderName": "Jane Doe",
                      "PaytCardRegnLifeCycleType": "02"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getExpiringResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "description": "Returns payment cards that will expire before or on the date specified in the parameters\n",
        "operationId": "GET_cards-expiring",
        "parameters": [
          {
            "name": "paymentcardexpirationmonth",
            "in": "query",
            "required": true,
            "description": "Payment card valid-to month",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "paymentcardexpirationyear",
            "in": "query",
            "required": true,
            "description": "Payment card valid-to year",
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/cards/poll/{sessionId}": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "DigitalPaymentTransaction": {
                    "DigitalPaymentTransaction": "181de3954a36821936960b94d0b96bbaf73037a33f0",
                    "DigitalPaymentDateTime": "2022-07-08T14:31:48.131Z",
                    "DigitalPaytTransResult": "01",
                    "DigitalPaytTransRsltDesc": "Successful"
                  },
                  "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES",
                  "PaymentCardType": "DPVI",
                  "PaymentCardExpirationMonth": "04",
                  "PaymentCardExpirationYear": "2019",
                  "PaymentCardMaskedNumber": "************4823",
                  "PaymentCardHolderName": "John Doe"
                },
                "schema": {
                  "$ref": "#/components/schemas/paymentCardResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "429": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Provides the payment card that was registered with the session identifier supplied. Possible status values are: <br> 01 - Successful (payment card registered successfully and payment card data returned) <br> 02 - Not successful (payment card registration failed) <br> 03 - Pending (payment card registration in progress) <br> 04 - Timeout (a timeout occurred during payment card registration) <br> 05 - Canceled (payment card registration canceled by user)\n",
        "operationId": "GET_cards-poll-sessionId"
      },
      "parameters": [
        {
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "maxLength": 80,
            "type": "string"
          },
          "description": "Unique identifier of a session used to poll the payment card\n"
        }
      ]
    },
    "/cards/delete": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "_comment": "No DigitalPaymentTransaction data will be returned if card deletion is simulated.",
                  "DeletedPaymentCards": [
                    {
                      "_comment": "Sample 1: Successful response of delete payment card 1",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2016-10-17T08:10:00Z",
                        "DigitalPaytTransResult": "01"
                      },
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE1"
                    },
                    {
                      "_comment": "Sample 2: Successful response of delete payment card 2, but negative result of the payment card deletion",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73c3076db8991360c0f04a9a912e2401c7237f32",
                        "DigitalPaymentDateTime": "2016-10-17T08:10:01Z",
                        "DigitalPaytTransResult": "02",
                        "DigitalPaytTransRsltDesc": "Message from Test Adapter: Card was not found"
                      },
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCZUIWGAQICCZARE2"
                    },
                    {
                      "_comment": "Sample 3: Response of simulation of delete payment card 3",
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE3",
                      "DeleteStatus": "01",
                      "DeleteStatusName": "Can be deleted"
                    },
                    {
                      "_comment": "Sample 4: Response of simulation of delete payment card 4",
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE4",
                      "DeleteStatus": "11",
                      "DeleteStatusName": "At least one authorization is pending"
                    },
                    {
                      "_comment": "Sample 5: Response of simulation of delete payment card 5",
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE5",
                      "DeleteStatus": "12",
                      "DeleteStatusName": "At least one charge was not successful that can be repeated"
                    },
                    {
                      "_comment": "Sample 6: Response of simulation of delete payment card 6",
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE6",
                      "DeleteStatus": "13",
                      "DeleteStatusName": "Card does not exist"
                    },
                    {
                      "_comment": "Sample 7: Response of simulation of delete payment card 7",
                      "PaytCardByPaytServiceProvider": "RVWBRS3NCEYDWGAQICCZARE7",
                      "DeleteStatus": "01"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/deletedPaymentCards"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Deletes the provided payment cards registered at the PSP",
        "operationId": "POST_cards-delete",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "PaymentCards": [
                  {
                    "_comment": "Sample 1: Delete payment card 1",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARE1"
                  },
                  {
                    "_comment": "Sample 2: Delete payment card 2",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARE2"
                  },
                  {
                    "_comment": "Sample 3: Simulation of delete payment card 3",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARE3"
                  },
                  {
                    "_comment": "Sample 4: Simulation of delete payment card 4",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARE4"
                  },
                  {
                    "_comment": "Sample 5: Simulation of delete payment card 5",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARE5"
                  },
                  {
                    "_comment": "Sample 6: Simulation of delete payment card 6",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARE6"
                  },
                  {
                    "_comment": "Sample 7: Simulation of delete payment card 7",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARE7"
                  }
                ],
                "_comment": "If parameter Simulate is set to true, it is only checked whether the card can be deleted or not.",
                "Simulate": false
              },
              "schema": {
                "$ref": "#/components/schemas/paymentCardsDeletionRequest"
              }
            }
          },
          "required": false
        }
      }
    },
    "/cards/getregistrationurl": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Starts the payment card registration process at the PSP determined using the routing parameters provided. <br> The URL for registering the payment card and the session identifier for polling the payment card will be returned in response.",
        "operationId": "GET_cards-getregistrationurl",
        "parameters": [
          {
            "$ref": "#/components/parameters/trait_routed_CompanyCode"
          },
          {
            "$ref": "#/components/parameters/trait_routed_CustomerCountry"
          },
          {
            "$ref": "#/components/parameters/trait_routed_PaymentMethod"
          },
          {
            "$ref": "#/components/parameters/trait_routed_PaymentType"
          },
          {
            "$ref": "#/components/parameters/trait_routed_RoutingCustomParameterValue"
          },
          {
            "$ref": "#/components/parameters/trait_routed_Currency"
          },
          {
            "$ref": "#/components/parameters/trait_routed_CommerceType"
          },
          {
            "$ref": "#/components/parameters/trait_routed_SessionType"
          },
          {
            "$ref": "#/components/parameters/trait_routed_PaytCardRegnLifeCycleType"
          },
          {
            "$ref": "#/components/parameters/trait_routed_DgtlPaytSenderLogicalSystem"
          }
        ]
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/registrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Starts the payment card registration process at the PSP determined using the routing parameters provided. <br> The URL for registering the payment card and the session identifier for polling the payment card will be returned in response.",
        "operationId": "POST_cards-getregistrationurl",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "ConsumerRedirectUrl": "https://www.myurl.com/PSP/",
                "RoutingParameters": {
                  "CustomParameterValue": "ESHOP",
                  "CompanyCode": "1010",
                  "CustomerCountry": "DE",
                  "PaymentMethod": "CC",
                  "Currency": "EUR",
                  "PaymentType": "PP",
                  "DgtlPaytSenderLogicalSystem": "0030390170AB3CLNT700"
                },
                "DigitalPaymentCommerceType": "ECOMMERCE",
                "PaytCardRegnLifeCycleType": "01"
              },
              "schema": {
                "$ref": "#/components/schemas/getRegistrationUrlRequest"
              }
            }
          },
          "required": false
        }
      }
    },
    "/authorizations": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Authorizations": [
                    {
                      "_comment": "Sample 1: Successful response of payment card authorization request with reference document and customer account number",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "0001346385657226"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                        "AuthorizationByAcquirer": "3485246834536",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "8209.81",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of payment card authorization request with additional routing parameters (CompanyCode, CustomParameterValue and DgtlPaytSenderLogicalSystem)",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "a484349843989449",
                        "AuthorizationByDigitalPaytSrvc": "DZS7VYOIVM",
                        "AuthorizedAmountInAuthznCrcy": "76.12",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 3: Successful response of payment card authorization request with parameter PreauthorizationIsRequested is set to false, but negative result of the payment card authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "DetailedAuthorizationStatus": "212",
                        "AuthorizationStatusName": "Card declined"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 4: Successful response of payment card pre-authorization request",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a34",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                        "AuthorizationByDigitalPaytSrvc": "UWH765NK92",
                        "AuthorizedAmountInAuthznCrcy": "1.00",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 5: Successful response of payment card pre-authorization request with reference document and additional routing parameters (CompanyCode and CustomParameterValue)",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a35",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "374678438432823"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_924823456",
                        "AuthorizationByDigitalPaytSrvc": "WKN4Q09TR1",
                        "AuthorizedAmountInAuthznCrcy": "0.00",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 6: Successful response of external payment re-authorization request",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a36",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "2386554456",
                        "AuthorizationByDigitalPaytSrvc": "GZWLZHSN87",
                        "AuthorizedAmountInAuthznCrcy": "63.27",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-02-22T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      }
                    },
                    {
                      "_comment": "Sample 7: Successful response of external payment re-authorization request with transaction id from the the PSP, but negative result of the external payment re-authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a37",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "DetailedAuthorizationStatus": "400",
                        "AuthorizationStatusName": "Authorization expired"
                      }
                    },
                    {
                      "_comment": "Sample 9: Successful response of payment card authorization request with authorization relation Id",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "0001346385657226"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                        "AuthorizationByAcquirer": "3485246834536",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "829.81",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      },
                      "DgtlPaytAuthznRelationID": "ASD64536WE36483623235864"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/authorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Authorizes the amount provided at the PSP using the source provided. The source can only be a payment card.",
        "operationId": "POST_authorizations",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Authorizations": [
                  {
                    "_comment": "Sample 1: Payment card authorization request with reference document and customer account number",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInAuthorizationCurrency": "8209.81",
                    "AuthorizationCurrency": "EUR",
                    "ReferenceDocument": "0001346385657226",
                    "CustomerAccountNumber": "3456345395"
                  },
                  {
                    "_comment": "Sample 2: Payment card authorization request with additional routing parameters (`CompanyCode`,`CustomParameterValue` and `DgtlPaytSenderLogicalSystem`)",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInAuthorizationCurrency": "76.12",
                    "AuthorizationCurrency": "USD",
                    "CompanyCode": "AB01",
                    "CustomParameterValue": "ESHOP",
                    "DgtlPaytSenderLogicalSystem": "0030390170AB3CLNT700"
                  },
                  {
                    "_comment": "Sample 3: Payment card authorization request with parameter `PreauthorizationIsRequested` set to false",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4"
                      }
                    },
                    "AmountInAuthorizationCurrency": "250",
                    "AuthorizationCurrency": "EUR",
                    "PreauthorizationIsRequested": false
                  },
                  {
                    "_comment": "Sample 4: Payment card pre-authorization request",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "PreauthorizationIsRequested": true
                  },
                  {
                    "_comment": "Sample 5: Payment card pre-authorization request with reference document and additional routing parameters (`CompanyCode` and `CustomParameterValue`)",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "PreauthorizationIsRequested": true,
                    "ReferenceDocument": "374678438432823",
                    "CompanyCode": "AB01",
                    "CustomParameterValue": "ESHOP"
                  },
                  {
                    "_comment": "Sample 6: External payment re-authorization request",
                    "Reauthorization": true,
                    "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY"
                  },
                  {
                    "_comment": "Sample 7: External payment re-authorization request with transaction id from the the PSP",
                    "Reauthorization": true,
                    "AuthorizationByDigitalPaytSrvc": "DZS7VYOIVM",
                    "TransactionByPaytSrvcPrvdr": "348433HGR324"
                  },
                  {
                    "_comment": "Sample 8: Payment card authorization request with authorization relation Id",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInAuthorizationCurrency": "829.81",
                    "AuthorizationCurrency": "EUR",
                    "PaymentCardAuthznRelationID": "12434687209609348205",
                    "ReferenceDocument": "0001346385657226"
                  },
                  {
                    "_comment": "Sample 9: Payment card authorization request with authorization relation Id and authorization scenario type",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInAuthorizationCurrency": "829.81",
                    "AuthorizationCurrency": "EUR",
                    "DgtlPaytAuthznRelationID": "ZBFCDSV4G7HR88ELOSPB48S",
                    "ReferenceDocument": "0001346385657226",
                    "DgtlPaytAuthznScenarioType": "RECURRING_SUBSEQUENT"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/authorizationRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/authorizations/cancel": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "CanceledAuthorizations": [
                    {
                      "_comment": "Sample 1: Successful response of cancel payment card authorization request with reference document",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "0001346385657226"
                      },
                      "AuthorizationByPaytSrvcPrvdr": "auth_4711",
                      "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                      "AuthorizationCancelStatus": "100",
                      "AuthorizationCancelStatusName": "Successful"
                    },
                    {
                      "_comment": "Sample 2: Successful response of cancel payment card authorization request with authorization id from the the PSP, but negative result of the payment card authorization cancelation",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:55:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "AuthorizationByPaytSrvcPrvdr": "auth_4712",
                      "AuthorizationByDigitalPaytSrvc": "DZS7VYOIVM",
                      "AuthorizationCancelStatus": "301",
                      "AuthorizationCancelStatusName": "Transaction must be in the authorized state"
                    },
                    {
                      "_comment": "Sample 3: Cancel payment card authorization request with both, reference document and authorization id from the the PSP could not be processed",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:55:23Z",
                        "DigitalPaytTransResult": "02",
                        "DigitalPaytTransRsltDesc": "Message from Paymetric: Internal server error",
                        "ReferenceDocument": "4865448633"
                      },
                      "AuthorizationByPaytSrvcPrvdr": "auth_4713",
                      "AuthorizationByDigitalPaytSrvc": "ILZSGWRANC"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/authorizationCancelResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Cancels/Voids authorizations at the PSP based on the authorization identifiers provided. The authorization identifiers can be either AuthorizationByPaytSrvcPrvdr or AuthorizationByDigitalPaytSrvc.",
        "operationId": "POST_authorizations-cancel",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "CancelAuthorizations": [
                  {
                    "_comment": "Sample 1: Cancel payment card authorization request with reference document",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES"
                      }
                    },
                    "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                    "ReferenceDocument": "0001346385657226"
                  },
                  {
                    "_comment": "Sample 2: Cancel payment card authorization request with authorization id from the the PSP",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4"
                      }
                    },
                    "AuthorizationByPaytSrvcPrvdr": "auth_4712",
                    "AuthorizationByDigitalPaytSrvc": "DZS7VYOIVM"
                  },
                  {
                    "_comment": "Sample 3: Cancel payment card authorization request with both, reference document and authorization id from the the PSP",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "AuthorizationByPaytSrvcPrvdr": "auth_4713",
                    "AuthorizationByDigitalPaytSrvc": "ILZSGWRANC",
                    "ReferenceDocument": "4865448633"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/authorizationCancelRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/authorizations/getbydigitalpaytsrvc": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Authorizations": [
                    {
                      "_comment": "Sample 1: Successful response of a payment card authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "1662e5bae8af61817df55ee489697120362422f4519",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_4711",
                        "AuthorizationByAcquirer": "acqu_4711",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "123.45",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2016-11-02T15:55:48Z",
                        "AuthorizationExpirationDateTme": "2016-11-09T15:55:48Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of a payment card authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "1662e5bae8af61817df55ee489697120362422f4519",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_4712",
                        "AuthorizationByAcquirer": "acqu_4712",
                        "AuthorizationByDigitalPaytSrvc": "PLZSAWLAVA",
                        "AuthorizedAmountInAuthznCrcy": "678.90",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2016-11-02T15:55:55Z",
                        "AuthorizationExpirationDateTme": "2016-11-09T15:55:24Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/authorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Gets authorizations based on SAP digital payments add-on authorization identifiers",
        "operationId": "POST_authorizations-getbydigitalpaytsrvc",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Authorizations": [
                  {
                    "_comment": "Sample 1",
                    "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY"
                  },
                  {
                    "_comment": "Sample 2",
                    "AuthorizationByDigitalPaytSrvc": "PLZSAWLAVA"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getAuthorizationsByDPRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/authorizations/getbypaytsrvcprvdr": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Authorizations": [
                    {
                      "_comment": "Sample 1: Successful response of a payment card authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "1662e5bae8af61817df55ee489697120362422f4519",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_4712",
                        "AuthorizationByAcquirer": "acqu_4712",
                        "AuthorizationByDigitalPaytSrvc": "PLZSAWLAVA",
                        "AuthorizedAmountInAuthznCrcy": "678.90",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2016-11-02T15:55:55Z",
                        "AuthorizationExpirationDateTme": "2016-11-09T15:55:24Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of an external payment authorization",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "1662e5bae8af61817df55ee489697120362422f4519",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_4713",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "123.45",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2016-11-02T15:55:48Z",
                        "AuthorizationExpirationDateTme": "2016-11-09T15:55:48Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      }
                    },
                    {
                      "_comment": "Sample 3: Failed response",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "1662e5bae8af61817df55ee489697120362422f4519",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "02",
                        "DigitalPaytTransRsltDesc": "Not successful"
                      },
                      "Error": {
                        "Id": "CORE_GET_AUTHS_AUTH_NOT_FOUND",
                        "DetailedMessage": "Authorization not found",
                        "ErrorTimestamp": "2018-10-01T06:41:52.363Z",
                        "CorrelationId": "34545af23247"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/authorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Gets authorizations based on payment service provider authorization identifiers",
        "operationId": "POST_authorizations-getbypaytsrvcprvdr",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Authorizations": [
                  {
                    "_comment": "Sample 1",
                    "AuthorizationByPaytSrvcPrvdr": "auth_4712",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                  },
                  {
                    "_comment": "Sample 2",
                    "AuthorizationByPaytSrvcPrvdr": "auth_4713",
                    "PaymentServiceProvider": "DPXX",
                    "Account": "12345@psp_name.com"
                  },
                  {
                    "_comment": "Sample 3",
                    "AuthorizationByPaytSrvcPrvdr": "auth_4714",
                    "PaymentServiceProvider": "DPXX"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getAuthorizationsByPSPRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/charges": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Charges": [
                    {
                      "_comment": "Sample 1: Successful response of payment card charge request with reference document and full authorization information",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "4865448632"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "281542168452374",
                        "AmountInPaymentCurrency": "16.76",
                        "PaymentCurrency": "EUR",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of payment card charge request with full authorization information, but negative result of the payment card charge",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Charge": {
                        "DetailedPaymentStatus": "400",
                        "PaymentStatusName": "Authorization Expired"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 3: Successful response of payment card charge request with minimal authorization information",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "pay_347635436",
                        "AmountInPaymentCurrency": "99.99",
                        "PaymentCurrency": "USD",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 4: Successful response of payment card direct capture request with reference number, customer account number and additional routing parameters (`CustomerCountry` and `PaymentMethod`)",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a34",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "4865448634"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "281542168452374",
                        "AmountInPaymentCurrency": "634.91",
                        "PaymentCurrency": "EUR",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 5: Payment card charge request with minimal authorization information and minimal L2 data",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a34",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "pay_347635436",
                        "AmountInPaymentCurrency": "104.00",
                        "PaymentCurrency": "EUR",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 6: Payment card charge request with minimal authorization information and minimal L2/L3 data",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a35",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "pay_347635437",
                        "AmountInPaymentCurrency": "104.00",
                        "PaymentCurrency": "EUR",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 8: Successful response of payment card direct capture request with authorization relation id and authorization scenario type",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a34",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "4865448634"
                      },
                      "Charge": {
                        "PaymentByPaymentServicePrvdr": "281542168452374",
                        "AmountInPaymentCurrency": "634.91",
                        "PaymentCurrency": "EUR",
                        "PaymentDateTime": "2017-01-30T04:51:51Z",
                        "DetailedPaymentStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      },
                      "DgtlPaytAuthznRelationID": "J2ENZWIHDSIMTNQK73F"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/chargeResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Charges the payment amount provided at the PSP based on the source provided. If an authorization is provided, the charge will settle this authorization. Alternatively, you can process a payment directly (without a prior authorization) using a direct capture by setting the PaymentIsToBeCaptured indicator to true.",
        "operationId": "POST_charges",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Charges": [
                  {
                    "_comment": "Sample 1: Payment card charge request with reference document and full authorization information",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInPaymentCurrency": "16.76",
                    "PaymentCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "ReferenceDocument": "4865448632",
                    "DigitalPaymentSettlementRef": "CC-DPBT-00005319",
                    "Authorization": {
                      "AuthorizationByPaytSrvcPrvdr": "a4849849449",
                      "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                      "AuthorizationByAcquirer": "aut9483984394",
                      "AuthorizedAmountInAuthznCrcy": "16.76",
                      "AuthorizationCurrency": "EUR",
                      "AuthorizationDateTime": "2016-10-01T13:00:00Z",
                      "AuthorizationExpirationDateTme": "2016-10-08T13:00:00Z",
                      "DetailedAuthorizationStatus": "100",
                      "AuthorizationStatusName": "Authorized"
                    }
                  },
                  {
                    "_comment": "Sample 2: Payment card charge request with full authorization information",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4"
                      }
                    },
                    "AmountInPaymentCurrency": "250",
                    "PaymentCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "Authorization": {
                      "AuthorizationByPaytSrvcPrvdr": "a484349843989449",
                      "AuthorizationByDigitalPaytSrvc": "DZS7VYOIVM",
                      "AuthorizationByAcquirer": "aut99999984394",
                      "AuthorizedAmountInAuthznCrcy": "287.98",
                      "AuthorizationCurrency": "EUR",
                      "AuthorizationDateTime": "2016-10-01T13:00:00Z",
                      "AuthorizationExpirationDateTme": "2016-10-08T13:00:00Z",
                      "DetailedAuthorizationStatus": "100"
                    }
                  },
                  {
                    "_comment": "Sample 3: Payment card charge request with minimal authorization information",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                      }
                    },
                    "AmountInPaymentCurrency": "99.99",
                    "PaymentCurrency": "USD",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "Authorization": {
                      "AuthorizationByDigitalPaytSrvc": "OBT789TR3A"
                    }
                  },
                  {
                    "_comment": "Sample 4: Payment card direct capture request (`PaymentIsToBeCaptured` = true) with reference number, customer account number and additional routing parameters (`CustomerCountry` and `PaymentMethod`)",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "AmountInPaymentCurrency": "634.91",
                    "PaymentCurrency": "EUR",
                    "PaymentIsToBeCaptured": true,
                    "ReferenceDocument": "4865448634",
                    "CustomerAccountNumber": "3456345395",
                    "CustomerCountry": "FR",
                    "PaymentMethod": "CC"
                  },
                  {
                    "_comment": "Sample 5: Payment card charge request with minimal authorization information and minimal L2 data",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                      }
                    },
                    "AmountInPaymentCurrency": "104.00",
                    "PaymentCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "Authorization": {
                      "AuthorizationByDigitalPaytSrvc": "OBT789TR3A"
                    },
                    "L2L3Data": {
                      "DigitalPaymentExternalOrder": "Project Stylophone",
                      "TransCrcyAlphaISOCode": "EUR",
                      "TaxAmount": "4.00"
                    }
                  },
                  {
                    "_comment": "Sample 6: Payment card charge request with minimal authorization information and minimal L2/L3 data",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMTNQK73F"
                      }
                    },
                    "AmountInPaymentCurrency": "104.00",
                    "PaymentCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "Authorization": {
                      "AuthorizationByDigitalPaytSrvc": "OBT789TR3B"
                    },
                    "L2L3Data": {
                      "DigitalPaymentExternalOrder": "Project Stylophone",
                      "TransCrcyAlphaISOCode": "EUR",
                      "TaxAmount": "4.00",
                      "SalesOrder": "24483",
                      "L3Items": [
                        {
                          "SalesDocumentItem": 1,
                          "ProductName": "Sound Station 'Boombox'",
                          "Product": "426884115",
                          "UNSPSCCommodityCode": "52161521",
                          "DigitalPaymentSalesDocItmAmt": "104.00"
                        }
                      ]
                    }
                  },
                  {
                    "_comment": "Sample 7: Payment card charge request with reference document, full authorization information and full L2/L3 data",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInPaymentCurrency": "342.65",
                    "PaymentCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentIsToBeCaptured": false,
                    "ReferenceDocument": "4865448632",
                    "DigitalPaymentSettlementRef": "2021021365BG43",
                    "Authorization": {
                      "AuthorizationByPaytSrvcPrvdr": "a4849849449",
                      "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                      "AuthorizationByAcquirer": "aut9483984394",
                      "AuthorizedAmountInAuthznCrcy": "310.00",
                      "AuthorizationCurrency": "EUR",
                      "AuthorizationDateTime": "2016-10-01T13:00:00Z",
                      "AuthorizationExpirationDateTme": "2016-10-08T13:00:00Z",
                      "DetailedAuthorizationStatus": "100",
                      "AuthorizationStatusName": "Authorized"
                    },
                    "L2L3Data": {
                      "DigitalPaymentExternalOrder": "Project Stylophone",
                      "TransCrcyAlphaISOCode": "EUR",
                      "TaxAmount": "12.8",
                      "SalesOrder": "24484",
                      "SalesOrderDate": "2018-08-16",
                      "CustomerInvoice": "24482",
                      "DigitalPaymentFreightAmount": "8.1",
                      "DigitalPaymentDutyAmount": "13.60",
                      "DigitalPaymentDiscountAmount": "1.10",
                      "ShipToPartyPostalCode": "69190",
                      "ShipToPartyCountryISO3Code": "DEU",
                      "ShipToPartyRegionISOCode": "DE-BW",
                      "ShipFromPartyPostalCode": "69190",
                      "ShipFromPartyCountryISO3Code": "DEU",
                      "DigitalPaymentTaxRateInPercent": "0.04",
                      "L3Items": [
                        {
                          "SalesDocumentItem": 1,
                          "ProductName": "Sound Station 'Boombox'",
                          "Product": "426884115",
                          "UNSPSCCommodityCode": "52161521",
                          "DigitalPaymentSalesDocItmAmt": "104.00",
                          "DgtlPaytSlsDocItmAmtIsGrssAmt": true,
                          "DigitalPaytSlsDocItmHasDiscAmt": true,
                          "DigitalPaymentDiscountAmount": "1.10",
                          "Quantity": "2",
                          "DigitalPaymentQuantityUnit": "EA",
                          "DigitalPaymentSlsDocItmUnitPrc": "52.00",
                          "Tax": [
                            {
                              "DigitalPaymentSlsDocItmTxType": "VALUE_ADDED",
                              "DigitalPaymentItmIsTaxExempted": false,
                              "DigitalPaymentTaxRateInPercent": "0.04",
                              "TaxAmount": "4.0"
                            }
                          ]
                        },
                        {
                          "SalesDocumentItem": 2,
                          "ProductName": "Sound Station 'Boombox' pro",
                          "UNSPSCCommodityCode": "52161526",
                          "Product": "426884118",
                          "DigitalPaymentSalesDocItmAmt": "200.00",
                          "DgtlPaytSlsDocItmAmtIsGrssAmt": false,
                          "DigitalPaytSlsDocItmHasDiscAmt": false,
                          "DigitalPaymentDiscountAmount": "0.00",
                          "Quantity": "2",
                          "QuantityUnit": "EA",
                          "DigitalPaymentSlsDocItmUnitPrc": "100.00",
                          "Tax": [
                            {
                              "DigitalPaymentSlsDocItmTxType": "VALUE_ADDED",
                              "DigitalPaymentItmIsTaxExempted": false,
                              "DigitalPaymentTaxRateInPercent": "0.09",
                              "TaxAmount": "18.00"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "_comment": "Sample 8: Payment card direct capture request (`PaymentIsToBeCaptured` = true) with authorization relation id and authorization scenario type",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "AmountInPaymentCurrency": "634.91",
                    "PaymentCurrency": "EUR",
                    "PaymentIsToBeCaptured": true,
                    "ReferenceDocument": "4865448634",
                    "CustomerAccountNumber": "3456345395",
                    "CustomerCountry": "FR",
                    "PaymentMethod": "CC",
                    "DgtlPaytAuthznRelationID": "KEUXT7W3Q4U2FHGSWAV",
                    "DgtlPaytAuthznScenarioType": "RECURRING_SUBSEQUENT"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/chargeRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/refunds": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Refunds": [
                    {
                      "_comment": "Sample 1: Successful response of payment card refund request with reference document",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "ref_498634379634"
                      },
                      "Refund": {
                        "RefundByPaymentServiceProvider": "4235643844",
                        "PaymentByPaymentServicePrvdr": "ch_38453585",
                        "AmountInRefundCurrency": "100.00",
                        "RefundCurrency": "EUR",
                        "RefundDateTime": "2017-01-30T04:51:51Z",
                        "DetailedRefundStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of payment card refund request",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Refund": {
                        "RefundByPaymentServiceProvider": "4235643012",
                        "PaymentByPaymentServicePrvdr": "ch_91355578",
                        "AmountInRefundCurrency": "250.00",
                        "RefundCurrency": "EUR",
                        "RefundDateTime": "2017-01-30T04:51:51Z",
                        "DetailedRefundStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 3: Successful response of payment card refund request with payment transaction description, but negative result of the payment card refund",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Refund": {
                        "DetailedRefundStatus": "500",
                        "RefundStatusName": "Refund amount too high"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/refundResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Refunds the amount provided at the PSP to the source provided. If the PSP\u2019s payment identifier (PaymentByPaymentServicePrvdr) is not provided as a reference to the original payment, a blind credit is requested. This can only work if the PSP supports blind credits and the source is a payment card.",
        "operationId": "POST_refunds",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Refunds": [
                  {
                    "_comment": "Sample 1: Payment card refund request with reference document and settlement reference",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES"
                      }
                    },
                    "AmountInRefundCurrency": "100",
                    "RefundCurrency": "EUR",
                    "PaymentByPaymentServicePrvdr": "ch_38453585",
                    "ReferenceDocument": "ref_498634379634",
                    "DigitalPaymentSettlementRef": "CC-DPBT-00005316"
                  },
                  {
                    "_comment": "Sample 2: Payment card refund request",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES"
                      }
                    },
                    "AmountInRefundCurrency": "250",
                    "RefundCurrency": "EUR",
                    "PaymentByPaymentServicePrvdr": "ch_91355578"
                  },
                  {
                    "_comment": "Sample 3: Payment card refund request with payment transaction description",
                    "Source": {
                      "Card": {
                        "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                      }
                    },
                    "AmountInRefundCurrency": "500",
                    "RefundCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME",
                    "PaymentByPaymentServicePrvdr": "ch_65253744"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/refundRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/refunds/bypaymentbydigitalpaymentservice": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Refunds": [
                    {
                      "_comment": "Sample 1: Successful response of refund request with reference document",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful",
                        "ReferenceDocument": "ref_498634379634"
                      },
                      "Refund": {
                        "RefundByPaymentServiceProvider": "4235643844",
                        "PaymentByPaymentServicePrvdr": "ch_38453585",
                        "AmountInRefundCurrency": "100.00",
                        "RefundCurrency": "EUR",
                        "RefundDateTime": "2017-01-30T04:51:51Z",
                        "DetailedRefundStatus": "100",
                        "MerchantAlias": "ECOM_EUR",
                        "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381a"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCEYDWGAQICCZARES"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of refund request",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Refund": {
                        "RefundByPaymentServiceProvider": "4235643012",
                        "PaymentByPaymentServicePrvdr": "ch_91355578",
                        "AmountInRefundCurrency": "250.00",
                        "RefundCurrency": "EUR",
                        "RefundDateTime": "2017-01-30T04:51:51Z",
                        "DetailedRefundStatus": "100",
                        "MerchantAlias": "ECOM_EUR",
                        "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381b"
                      },
                      "Source": {
                        "Merchant": {
                          "PaymentServiceProvider": "DPXX",
                          "Account": "1238453483"
                        }
                      }
                    },
                    {
                      "_comment": "Sample 3: Successful response of refund request with payment transaction description, but negative result of the refund",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "Refund": {
                        "DetailedRefundStatus": "500",
                        "RefundStatusName": "Refund amount too high",
                        "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381c"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "DKEUXT7W3Q4U2FHGSWAVPV7V"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/refundResponses"
                }
              }
            }
          }
        },
        "description": "Refunds the payment amount provided by the SAP digital payments add-on. If no amount and currency are provided, the original payment amount according to the SAP digital payments add-on is refunded at the PSP.",
        "operationId": "POST_refunds-bypaymentbydigitalpaymentservice",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Refunds": [
                  {
                    "_comment": "Sample 1: Refund request with reference document and settlement batch reference",
                    "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381a",
                    "AmountInRefundCurrency": "100.00",
                    "RefundCurrency": "EUR",
                    "ReferenceDocument": "ref_498634379634",
                    "DigitalPaymentSettlementRef": "5376"
                  },
                  {
                    "_comment": "Sample 2: Refund request without optional parameters",
                    "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381b",
                    "AmountInRefundCurrency": "250.00",
                    "RefundCurrency": "EUR"
                  },
                  {
                    "_comment": "Sample 3: Refund request with payment transaction description",
                    "PaymentByDigitalPaymentService": "15e86080494113cfc0a48634e47b4f4d956f0b0381c",
                    "AmountInRefundCurrency": "500.00",
                    "RefundCurrency": "EUR",
                    "PaymentTransactionDescription": "COMPANY NAME MERCHANT"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/refundByDPTransRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/advice": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/adviceResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        },
        "description": "Deprecated. Use v2/advice instead. Requests the advice items based on the advice parameters.",
        "operationId": "POST_advice",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "FromDate": "2016-10-26",
                "ToDate": "2016-12-01",
                "PaymentMethod": "CC"
              },
              "schema": {
                "$ref": "#/components/schemas/adviceRequest"
              }
            }
          },
          "required": false
        }
      }
    },
    "/externalpayments/getbydigitalpaymentservice": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "ExternalPayments": [
                    {
                      "_comment": "Sample 1: Successful response of an external payment (created as 1-step direct capture)",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15e86080494113cfc0a48634e47b4f4d956f0b08761",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:52.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "ExternalPayment": {
                        "ExtPaytByPaytSrvcPrvdr": "UP634KL3455FWE",
                        "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "MerchantAlias": "ECOM_USD",
                        "AmountInPaymentCurrency": "652.98",
                        "PaymentCurrency": "USD",
                        "CreationDateTime": "2018-09-29T09:21:34.012Z",
                        "DetailedExternalPaymentStatus": "100",
                        "ExternalPaymentStatusName": "Paid"
                      }
                    },
                    {
                      "_comment": "Sample 2: Successful response of an external payment (created as 2-step with authorization)",
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15e86080494113cfc0a48634e47b4f4d956f0b08763",
                        "DigitalPaymentDateTime": "2018-10-01T06:40:54.363Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "ExternalPayment": {
                        "ExtPaytByPaytSrvcPrvdr": "923624354635434335",
                        "PaymentByDigitalPaymentService": "1662e5bae8af61817df55ee489697120362422f4519",
                        "MerchantAlias": "ECOM_USD",
                        "AmountInPaymentCurrency": "31.17",
                        "PaymentCurrency": "USD",
                        "DetailedExternalPaymentStatus": "100"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/externalPaymentResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Gets external payments based on SAP digital payments add-on payment identifiers",
        "operationId": "POST_externalpayments-getbydigitalpaymentservice",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "ExternalPayments": [
                  {
                    "_comment": "Sample 1 - External payment (created as 1-step direct capture)",
                    "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a31"
                  },
                  {
                    "_comment": "Sample 2 - External payment (created as 2-step with authorization)",
                    "PaymentByDigitalPaymentService": "1662e5bae8af61817df55ee489697120362422f4519"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getExternalPaymentsByDPPaymentRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/serviceconfiguration": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/serviceConfigurationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Provides the payment methods that exist as well as the PSPs that are configured together with the payment methods they support",
        "operationId": "GET_serviceconfiguration"
      }
    },
    "/tokens/getforpaymentcardwithauthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "PaymentCardsWithAuthorization": [
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByPaytServiceProvider": "CR87QHB7JTRSC",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "MerchantUSD",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                        "AuthorizationByAcquirer": "3485246834536",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "112.33",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES",
                          "PaymentCardType": "DPVI",
                          "PaymentCardExpirationMonth": "04",
                          "PaymentCardExpirationYear": "2021",
                          "PaymentCardMaskedNumber": "************4823",
                          "PaymentCardHolderName": "John Doe"
                        }
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243432",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByPaytServiceProvider": "RT564987DR",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "MerchantEUR",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874fsd",
                        "AuthorizationByAcquirer": "348524683sfda",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "23.12",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      },
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "FASFASDDFASDDASDASD2332",
                          "PaymentCardType": "DPVI",
                          "PaymentCardExpirationMonth": "04",
                          "PaymentCardExpirationYear": "2022",
                          "PaymentCardMaskedNumber": "************4341",
                          "PaymentCardHolderName": "Jane Doe"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getTokenForPaymentCardWithAuthorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Checks the authorization provided and the related card at the PSP, and provides an SAP digital payments add-on token for the authorization and the related card",
        "operationId": "POST_tokens-getforpaymentcardwithauthorization",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "PaymentCardsWithAuthorization": [
                  {
                    "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                    "PaytCardByPaytServiceProvider": "CR87QHB7JTRSC",
                    "PaymentCardContext": {
                      "registrationRequest": "9bda25c3-c873-49e9-875f-b0fdd25c05fe"
                    },
                    "PaymentServiceProvider": "DPXX",
                    "AuthorizedAmountInAuthznCrcy": "112.33",
                    "AuthorizationCurrency": "EUR",
                    "MerchantAccount": "MerchantUSD",
                    "DigitalPaymentCommerceType": "ECOMMERCE",
                    "DigitalPaymentSessionType": "ONLINE",
                    "PaytCardRegnLifeCycleType": "01"
                  },
                  {
                    "AuthorizationByPaytSrvcPrvdr": "auth_34874fsd",
                    "PaytCardByPaytServiceProvider": "RT564987DR",
                    "PaymentServiceProvider": "DPXX",
                    "AuthorizedAmountInAuthznCrcy": "23.12",
                    "AuthorizationCurrency": "EUR",
                    "MerchantAccount": "MerchantEUR",
                    "DigitalPaymentCommerceType": "MOTO",
                    "DigitalPaymentSessionType": "OFFLINE"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getTokenForPaymentCardWithAuthorizationRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/tokens/getforpaymentcard": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "PaymentCards": [
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByPaytServiceProvider": "CR87QHB7JTRSC",
                      "PaymentServiceProvider": "DPXX",
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES",
                          "PaymentCardType": "DPVI",
                          "PaymentCardExpirationMonth": "04",
                          "PaymentCardExpirationYear": "2022",
                          "PaymentCardMaskedNumber": "************4341",
                          "PaymentCardHolderName": "Jane Doe"
                        }
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243432",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByPaytServiceProvider": "RT564987DR",
                      "PaymentServiceProvider": "DPXX",
                      "Source": {
                        "Card": {
                          "PaytCardByDigitalPaymentSrvc": "FASFASDDFASDDASDASD2332",
                          "PaymentCardType": "DPVI",
                          "PaymentCardExpirationMonth": "04",
                          "PaymentCardExpirationYear": "2022",
                          "PaymentCardMaskedNumber": "************4341",
                          "PaymentCardHolderName": "Jane Doe"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getTokenForPaymentCardResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Checks the card at the PSP and provides an SAP digital payments add-on token for the card",
        "operationId": "POST_tokens-getforpaymentcard",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "PaymentCards": [
                  {
                    "PaytCardByPaytServiceProvider": "CR87QHB7JTRSC",
                    "PaymentCardContext": {
                      "registrationRequest": "9bda25c3-c873-49e9-875f-b0fdd25c05fe"
                    },
                    "PaymentServiceProvider": "DPXX",
                    "PaytCardRegnLifeCycleType": "01"
                  },
                  {
                    "PaytCardByPaytServiceProvider": "RT564987DR",
                    "PaymentServiceProvider": "DPXX"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getTokenForPaymentCardRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/tokens/getforpaymentcardauthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Authorizations": [
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES",
                      "MerchantAccount": "MerchantUSD",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874383",
                        "AuthorizationByAcquirer": "3485246834536",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "112.33",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243432",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4",
                      "MerchantAccount": "MerchantEUR",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34874fsd",
                        "AuthorizationByAcquirer": "348524683sfda",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "23.12",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T15:54:25Z",
                        "AuthorizationExpirationDateTme": "2017-01-30T15:54:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getTokenForPaymentCardAuthorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Checks the authorization provided at the PSP for a card known to the SAP digital payments add-on and provides an SAP digital payments add-on token for the authorization",
        "operationId": "POST_tokens-getforpaymentcardauthorization",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Authorizations": [
                  {
                    "AuthorizationByPaytSrvcPrvdr": "auth_2AV874383",
                    "PaytCardByDigitalPaymentSrvc": "RVWBRS3NCZUIWGAQICCZARES",
                    "MerchantAccount": "MerchantUSD",
                    "AuthorizedAmountInAuthznCrcy": "112.33",
                    "AuthorizationCurrency": "USD",
                    "DigitalPaymentCommerceType": "ECOMMERCE",
                    "DigitalPaymentSessionType": "ONLINE"
                  },
                  {
                    "AuthorizationByPaytSrvcPrvdr": "auth_BS4874fsd",
                    "PaytCardByDigitalPaymentSrvc": "IFGECJ2ENZWIHDSIMRBIW2S4",
                    "MerchantAccount": "MerchantEUR",
                    "AuthorizedAmountInAuthznCrcy": "23.12",
                    "AuthorizationCurrency": "EUR",
                    "DigitalPaymentCommerceType": "MOTO",
                    "DigitalPaymentSessionType": "OFFLINE"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getTokenForPaymentCardAuthorizationRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/tokens/getforauthorization": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "Authorizations": [
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "SHOP_USD",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "98644GTSV364",
                        "AuthorizationByDigitalPaytSrvc": "ILZSGWLACY",
                        "AuthorizedAmountInAuthznCrcy": "123.45",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2017-01-23T14:34:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a32",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:24Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "KLARNA_EUR",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34354734532",
                        "AuthorizationByDigitalPaytSrvc": "UZESGWLOAG",
                        "AuthorizedAmountInAuthznCrcy": "6.78",
                        "AuthorizationCurrency": "EUR",
                        "AuthorizationDateTime": "2017-01-23T14:38:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_EUR"
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2017-01-23T15:54:26Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "1238453483",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "auth_34354734532",
                        "AuthorizationByDigitalPaytSrvc": "WNESGWLOPW",
                        "AuthorizedAmountInAuthznCrcy": "9.01",
                        "AuthorizationCurrency": "USD",
                        "AuthorizationDateTime": "2017-01-23T14:39:25Z",
                        "DetailedAuthorizationStatus": "100",
                        "MerchantAlias": "ECOM_USD"
                      }
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a34",
                        "DigitalPaymentDateTime": "2017-01-23T15:55:26Z",
                        "DigitalPaytTransResult": "02",
                        "DigitalPaytTransRsltDesc": "Not successful",
                        "Error": {
                          "Id": "PSP_RETRIEVE_AUTH_FAILED",
                          "Message": "Internal Server Error",
                          "DetailedMessage": "Response from payment service provider PSP was invalid: No such authorization: xyz",
                          "ErrorTimestamp": "2017-01-23T15:55:26.905Z",
                          "CorrelationId": "17322915063828686705",
                          "SourceArtifact": "core",
                          "MessageAttributes": [
                            {
                              "Name": "PaymentServiceProviderName",
                              "Value": "PSP"
                            },
                            {
                              "Name": "CustomText",
                              "Value": "No such authorization: xyz"
                            }
                          ],
                          "CustomText": "No such authorization: xyz",
                          "PaymentServiceProviderName": "PSP"
                        }
                      },
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "1238453483",
                      "Authorization": {
                        "AuthorizationByPaytSrvcPrvdr": "xyz"
                      }
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getTokenForAuthorizationResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Checks the authorization provided at the PSP for external  payments (for authorizations with payment cards, use /getforpaymentcardauthorization) and provides an SAP digital payments add-on token for the authorization",
        "operationId": "POST_tokens-getforauthorization",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "Authorizations": [
                  {
                    "AuthorizationByPaytSrvcPrvdr": "98644GTSV364",
                    "PaymentServiceProvider": "DPXX",
                    "MerchantAccount": "SHOP_USD",
                    "DigitalPaymentAuthorizationType": "DP2P",
                    "AuthorizedAmountInAuthznCrcy": "123.45",
                    "AuthorizationCurrency": "USD"
                  },
                  {
                    "AuthorizationByPaytSrvcPrvdr": "auth_34354734532",
                    "PaymentServiceProvider": "DPXX",
                    "MerchantAccount": "KLARNA_EUR",
                    "DigitalPaymentAuthorizationType": "KLA2",
                    "AuthorizedAmountInAuthznCrcy": "6.78",
                    "AuthorizationCurrency": "EUR"
                  },
                  {
                    "AuthorizationByPaytSrvcPrvdr": "1494343435687",
                    "PaymentServiceProvider": "DPXX",
                    "MerchantAccount": "1238453483",
                    "DigitalPaymentAuthorizationType": "ALI2",
                    "AuthorizedAmountInAuthznCrcy": "9.01",
                    "AuthorizationCurrency": "USD"
                  },
                  {
                    "AuthorizationByPaytSrvcPrvdr": "xyz",
                    "PaymentServiceProvider": "DPXX",
                    "MerchantAccount": "1238453483",
                    "DigitalPaymentAuthorizationType": "ALI2",
                    "AuthorizedAmountInAuthznCrcy": "99.99",
                    "AuthorizationCurrency": "USD"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getTokenForAuthorizationRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/tokens/getfordirectcapture": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "DirectCaptures": [
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "ach_954591355579",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "ACH_USD",
                      "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a31"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243432",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "ap_1wuif2z587eht8723",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "1238453483",
                      "PaymentByDigitalPaymentService": "324432432sdf432243432sfda4321243432243432",
                      "MerchantAlias": "SHOPEUR"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a33",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "18644GTSV361",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "SHOP_USD",
                      "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a33"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243434",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "cc12878723",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "SHOP_EUR",
                      "PaymentByDigitalPaymentService": "324432432sdf432243432sfda4321243432243434"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a35",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "ideal_3484346438758342",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "IDEAL_EUR",
                      "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a35",
                      "MerchantAlias": "IDEAL_PAYMENTS"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "324432432sdf432243432sfda4321243432243436",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "capt_9362374465",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "KLARNA_EUR",
                      "PaymentByDigitalPaymentService": "324432432sdf432243432sfda4321243432243436"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a37",
                        "DigitalPaymentDateTime": "2019-01-23T15:54:23Z",
                        "DigitalPaytTransResult": "01",
                        "DigitalPaytTransRsltDesc": "Successful"
                      },
                      "PaymentByPaymentServicePrvdr": "348gfw385r3338gerf4",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "SOFORT_EUR",
                      "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a37"
                    },
                    {
                      "DigitalPaymentTransaction": {
                        "DigitalPaymentTransaction": "15d73bda6fb690bb405cd8a4410acd55de92d266a38",
                        "DigitalPaymentDateTime": "2017-01-23T15:55:26Z",
                        "DigitalPaytTransResult": "02",
                        "DigitalPaytTransRsltDesc": "Not successful",
                        "Error": {
                          "Id": "PSP_RETRIEVE_DIRECT_CAPTURE_FAILED",
                          "Message": "Internal Server Error",
                          "DetailedMessage": "Response from payment service provider PSP was invalid: No such direct capture: xyz",
                          "ErrorTimestamp": "2017-01-23T15:55:26.905Z",
                          "CorrelationId": "17322915063828686799",
                          "SourceArtifact": "core",
                          "MessageAttributes": [
                            {
                              "Name": "PaymentServiceProviderName",
                              "Value": "PSP"
                            },
                            {
                              "Name": "CustomText",
                              "Value": "No such direct capture: xyz"
                            }
                          ],
                          "CustomText": "No such direct capture: xyz",
                          "PaymentServiceProviderName": "PSP"
                        }
                      },
                      "PaymentByPaymentServicePrvdr": "xyz",
                      "PaymentServiceProvider": "DPXX",
                      "MerchantAccount": "SHOP_EUR",
                      "PaymentByDigitalPaymentService": "15d73bda6fb690bb405cd8a4410acd55de92d266a38"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/getTokenForDirectCaptureResponses"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Checks the direct capture at the PSP and provides an SAP digital payments add-on token for the payment",
        "operationId": "POST_tokens-getfordirectcapture",
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "DirectCaptures": [
                  {
                    "PaymentByPaymentServicePrvdr": "ach_954591355579",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "ACH1",
                    "MerchantAccount": "ACH_USD",
                    "AmountInPaymentCurrency": "16.76",
                    "PaymentCurrency": "USD"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "ap_1wuif2z587eht8723",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "ALI1",
                    "MerchantAccount": "1238453483",
                    "AmountInPaymentCurrency": "203.45",
                    "PaymentCurrency": "USD"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "18644GTSV361",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "DP1P",
                    "MerchantAccount": "SHOP_USD",
                    "AmountInPaymentCurrency": "82.07",
                    "PaymentCurrency": "USD"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "cc12878723",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "DPC1",
                    "MerchantAccount": "SHOP_EUR",
                    "AmountInPaymentCurrency": "98.79",
                    "PaymentCurrency": "EUR"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "ideal_3484346438758342",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "IDE1",
                    "MerchantAccount": "IDEAL_EUR",
                    "AmountInPaymentCurrency": "1298",
                    "PaymentCurrency": "EUR"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "capt_9362374465",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "KLA1",
                    "MerchantAccount": "KLARNA_EUR",
                    "AmountInPaymentCurrency": "6.99",
                    "PaymentCurrency": "EUR"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "348gfw385r3338gerf4",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "SOF1",
                    "MerchantAccount": "SOFORT_EUR",
                    "AmountInPaymentCurrency": "274.84",
                    "PaymentCurrency": "EUR"
                  },
                  {
                    "PaymentByPaymentServicePrvdr": "xyz",
                    "PaymentServiceProvider": "DPXX",
                    "DigitalPaymentDirectCaptureType": "DPC1",
                    "MerchantAccount": "SHOP_EUR",
                    "AmountInPaymentCurrency": "99.99",
                    "PaymentCurrency": "EUR"
                  }
                ]
              },
              "schema": {
                "$ref": "#/components/schemas/getTokenForDirectCaptureRequests"
              }
            }
          },
          "required": false
        }
      }
    },
    "/dpjslib/loader": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "LoaderUrl": "https://server.digitalpayments.cfapps.eu10.hana.ondemand.com/dpjslib/loader.js?sessionId=xyz",
                  "APISessionId": "ASkAC3bLFYkWOEt6V4vhnExDTM+b2/XEgQycpONvS2cumuYNcDY6tKTPTftG42985OVO"
                },
                "schema": {
                  "$ref": "#/components/schemas/dpjslibLoaderResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "example": {
                  "id": "400MalformedRequest",
                  "message": "Bad Request"
                },
                "schema": {
                  "$ref": "#/components/schemas/extendedError"
                }
              }
            }
          }
        },
        "description": "Returns the URL for loading the SAP digital payment add-on JavaScript library and initializes a session for it",
        "operationId": "GET_dpjslib-loader"
      }
    }
  },
  "components": {
    "schemas": {
      "paymentCard": {
        "type": "object",
        "properties": {
          "PaymentCardType": {
            "description": "Four-character code denoting the brand of the payment card. Allowed code values: <br> DPAM - American Express <br> DPVI - VISA <br> DPMC - MasterCard <br> DPDI - Diners Club <br> DPDS - Discover Card [US only] <br> DPJC - JCB <br> PLDC - PINLess Debit Card <br> ACHE - ACH/Electronic Check",
            "example": "DPVI",
            "type": "string"
          },
          "PaymentCardExpirationMonth": {
            "maxLength": 2,
            "description": "Payment card valid-to month",
            "example": "04",
            "type": "string"
          },
          "PaymentCardExpirationYear": {
            "maxLength": 4,
            "description": "Payment card valid-to year",
            "example": "2023",
            "type": "string"
          },
          "PaymentCardMaskedNumber": {
            "description": "Masked representation of a payment card showing only a few digits of the full payment card number",
            "example": "************4823",
            "type": "string"
          },
          "PaymentCardHolderName": {
            "description": "Name of the holder (person or organization) shown on the payment card",
            "example": "John Doe",
            "type": "string"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          }
        }
      },
      "paymentCards": {
        "type": "object",
        "properties": {
          "PaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentCard"
            }
          }
        }
      },
      "paymentCardsDeletionRequest": {
        "type": "object",
        "properties": {
          "PaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentCard"
            }
          },
          "Simulate": {
            "description": "If set to true, a check determines whether or not deletion would be possible for each payment card provided. No deletion is actually performed. <br> If set to false or no attribute is specified, deletion is performed.",
            "example": true,
            "type": "boolean"
          }
        }
      },
      "paymentCardResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "PaymentCardType": {
            "description": "Four-character code denoting the brand of the payment card. Allowed code values: <br> DPAM - American Express <br> DPVI - VISA <br> DPMC - MasterCard <br> DPDI - Diners Club <br> DPDS - Discover Card [US only] <br> DPJC - JCB <br> PLDC - PINLess Debit Card <br> ACHE - ACH/Electronic Check",
            "example": "DPVI",
            "type": "string"
          },
          "PaymentCardExpirationMonth": {
            "maxLength": 2,
            "description": "Payment card valid-to month",
            "example": "04",
            "type": "string"
          },
          "PaymentCardExpirationYear": {
            "maxLength": 4,
            "description": "Payment card valid-to year",
            "example": "2019",
            "type": "string"
          },
          "PaymentCardMaskedNumber": {
            "description": "Masked representation of a payment card showing only a few digits of the full payment card number",
            "example": "************4823",
            "type": "string"
          },
          "PaymentCardHolderName": {
            "description": "Name of the holder (person or organization) shown on the payment card",
            "example": "John Doe",
            "type": "string"
          }
        }
      },
      "deletedPaymentCard": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "DeleteStatus": {
            "description": "Status code value (01 - Can be deleted; 11 - At least one authorization is pending; 12 - At least one charge was not successful that can be repeated; 13 - Card does not exist)",
            "example": "01",
            "type": "string"
          },
          "DeleteStatusName": {
            "description": "Status name or human-readable error description. Text is provided by PSP and will not be translated.",
            "example": "Can be deleted",
            "type": "string"
          }
        }
      },
      "deletedPaymentCards": {
        "type": "object",
        "properties": {
          "DeletedPaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deletedPaymentCard"
            }
          }
        }
      },
      "registrationResponse": {
        "type": "object",
        "properties": {
          "PaymentCardRegistrationURL": {
            "description": "URL that must be called to register a payment card at the PSP",
            "example": "https://www.myurl.com/PSP/register/card/index.html#registrationToken=575c60bbcb8f4d108a12055c007992c5a45992cbb",
            "type": "string"
          },
          "PaymentCardRegistrationSession": {
            "description": "Unique identifier of a session to register a payment card and also to poll the payment card in a separate operation",
            "example": "575c60bb-cb8f-4d10-8a12-055c007992c5",
            "type": "string"
          }
        }
      },
      "source": {
        "description": "Means of payment to be used for the authorization or charge (such as payment card or online payment system account)",
        "type": "object",
        "properties": {
          "Card": {
            "$ref": "#/components/schemas/paymentCard"
          },
          "Merchant": {
            "$ref": "#/components/schemas/merchant"
          }
        }
      },
      "authorizationRequest": {
        "type": "object",
        "properties": {
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "AmountInAuthorizationCurrency": {
            "description": "Amount that is to be authorized. The following pattern is used for validation: ^[-]?(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "AuthorizationCurrency": {
            "description": "Currency code (using ISO 4217) of the amount that is to be authorized",
            "example": "EUR",
            "type": "string"
          },
          "PaymentCardAuthznRelationID": {
            "maxLength": 44,
            "description": "Obsolete - use DgtlPaytAuthznRelationID instead",
            "example": "ASD64536WE36483623235864",
            "type": "string"
          },
          "DgtlPaytAuthznRelationID": {
            "maxLength": 44,
            "description": "Unique identifier of a previously successful authorization representing a link to the current authorization request. Must be empty if the authorization currently to be initiated is not associated with any previous authorization.",
            "example": "ASD64536WE36483623235864",
            "type": "string"
          },
          "PreauthorizationIsRequested": {
            "description": "Indicator showing whether a preauthorization is requested to verify that the customer's payment card and account are valid. Only the following three combinations of values in a request will be accepted. All others will be rejected. <br> - PreauthorizationIsRequested set on True; Neither amount nor currency is provided (standard case) <br> - Negative amount and currency are provided <br> - PreauthorizationIsRequested set on True; Positive amount and currency are provided",
            "example": false,
            "type": "boolean"
          },
          "ReferenceDocument": {
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "CustomerAccountNumber": {
            "description": "Level 2 data: Customer account number",
            "example": "1029384756",
            "type": "string"
          },
          "Reauthorization": {
            "description": "Indicator showing whether a reauthorization is requested. Currently only external payments can be reauthorized.",
            "example": true,
            "type": "boolean"
          },
          "AuthorizationByDigitalPaytSrvc": {
            "description": "Unique identifier provided by the SAP digital payments add-on. Only used when reauthorization is requested.",
            "example": "ILZSGWLACY",
            "type": "string"
          },
          "TransactionByPaytSrvcPrvdr": {
            "description": "Unique identifier of a transaction processed by a PSP",
            "example": "ch_36453645364836",
            "type": "string"
          },
          "CompanyCode": {
            "description": "Routing parameter to determine PSP and associated merchant ID using company code",
            "example": "1010",
            "type": "string"
          },
          "CustomerCountry": {
            "description": "Routing parameter to determine PSP and associated merchant ID using country of customer",
            "example": "DE",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "Routing parameter to determine PSP and associated merchant ID using payment method (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "DgtlPaytSenderLogicalSystem": {
            "maxLength": 20,
            "description": "Routing parameter to determine PSP and associated merchant ID using the unique identifier of the system sending the request to the SAP digital payments add-on",
            "example": "0030390170AB3CLNT700",
            "type": "string"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/externalPaymentType"
          },
          "CustomParameterValue": {
            "description": "Routing parameter to determine PSP and associated merchant ID using custom value",
            "type": "string"
          },
          "DigitalPaymentCommerceType": {
            "$ref": "#/components/schemas/digitalPaymentCommerceType"
          },
          "DigitalPaymentSessionType": {
            "$ref": "#/components/schemas/digitalPaymentSessionType"
          },
          "ChargeIsProcessedExternally": {
            "description": "Indicator showing that the authorization is to be charged externally.",
            "example": true,
            "type": "boolean"
          },
          "DgtlPaytAuthznScenarioType": {
            "$ref": "#/components/schemas/digitalPaymentAuthorizationScenarioType"
          },
          "BillingAddress": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "Source"
        ]
      },
      "authorizationRequests": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authorizationRequest"
            }
          }
        }
      },
      "digitalPaymentAuthorizationScenarioType": {
        "description": "Type of business scenario with which the payment authorization is associated, e.g. indicating that an authorization is a starting point for a recurring payment. If not specified otherwise, the implicit default value is UNASSOCIATED.",
        "enum": [
          "UNASSOCIATED",
          "RECURRING_INITIAL",
          "RECURRING_SUBSEQUENT",
          "RECURRING_EBA_INITIAL",
          "RECURRING_EBA_SUBSEQUENT"
        ],
        "type": "string"
      },
      "getAuthorizationsByDPRequest": {
        "type": "object",
        "properties": {
          "AuthorizationByDigitalPaytSrvc": {
            "description": "Unique 10-character identifier provided by the SAP digital payments add-on. Can be used as an alternative to the identifier provided by the PSP if the system that is connected cannot process long authorization identifiers.",
            "example": "ILZSGWLACY",
            "type": "string"
          }
        },
        "required": [
          "AuthorizationByDigitalPaytSrvc"
        ]
      },
      "getAuthorizationsByDPRequests": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getAuthorizationsByDPRequest"
            }
          }
        }
      },
      "getAuthorizationsByPSPRequest": {
        "type": "object",
        "properties": {
          "AuthorizationByPaytSrvcPrvdr": {
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. The attribute is mandatory for payment card payments but not allowed for external payments. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "description": "Four-character PSP code with which the transaction was performed. The attribute is mandatory for external payments but not allowed for payment card payments.",
            "example": "DPXX",
            "type": "string"
          },
          "Account": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier. This is not mandatory.",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          }
        },
        "required": [
          "AuthorizationByPaytSrvcPrvdr"
        ]
      },
      "getAuthorizationsByPSPRequests": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getAuthorizationsByPSPRequest"
            }
          }
        }
      },
      "authorization": {
        "type": "object",
        "properties": {
          "AuthorizationByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "AuthorizationByAcquirer": {
            "maxLength": 30,
            "description": "Unique identifier provided by an acquirer to represent an authorization. Can be empty if PSP does not use an acquirer.",
            "example": "acqu_4711",
            "type": "string"
          },
          "AuthorizationByDigitalPaytSrvc": {
            "maxLength": 10,
            "description": "Unique 10-character identifier provided by the SAP digital payments add-on. Can be used as an alternative to the identifier provided by the PSP if the system that is connected cannot process long authorization identifiers.",
            "example": "ILZSGWLACY",
            "type": "string"
          },
          "AuthorizedAmountInAuthznCrcy": {
            "description": "Authorized amount. The following pattern is used for validation: ^[-]?(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "AuthorizationCurrency": {
            "maxLength": 3,
            "description": "Currency code (using ISO 4217) of the authorized amount",
            "example": "EUR",
            "type": "string"
          },
          "AuthorizationDateTime": {
            "description": "Timestamp (UTC) indicating when the authorization was processed at the PSP. The following pattern is used for validation: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "AuthorizationExpirationDateTme": {
            "description": "Timestamp (UTC) indicating when the authorization will expire at the PSP. Can be empty if the PSP does not support this functionality. The following pattern is used for validation: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-23T14:20:52Z",
            "type": "string"
          },
          "AuthorizationStatus": {
            "maxLength": 3,
            "description": "Deprecated. Status code value (01 - Successful; 02 - Not successful) <br> Use DetailedAuthorizationStatus instead.",
            "example": "01",
            "type": "string"
          },
          "DetailedAuthorizationStatus": {
            "maxLength": 3,
            "description": "Detailed status code value: <br> 100 - Successful <br> 201 - Limit exceeded <br> 202 - Temporary processing error <br> 210 - Card data invalid <br> 211 - Card expired <br> 212 - Card declined <br> 213 - Fraudulent transaction <br> 220 - Data validation error <br> 221 - Missing authorization <br> 222 - Transaction declined <br> 299 - Processing error <br> 400 - Authorization expired",
            "example": "100",
            "type": "string"
          },
          "DigitalPaymentFraudRisk": {
            "$ref": "#/components/schemas/fraudRisk"
          },
          "AuthorizationStatusName": {
            "maxLength": 40,
            "description": "Status name or human-readable error description if DetailedAuthorizationStatus is not 100. Text is provided by PSP and will not be translated.",
            "example": "ERR_01: Limit exceeded",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier: Only provided for reporting purposes",
            "example": "SHOPEUR",
            "type": "string"
          }
        }
      },
      "authorizationResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "Authorization": {
            "$ref": "#/components/schemas/authorization"
          },
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "PaytCardCSCVerificationStatus": {
            "description": "Code value representing the status of a payment card security code verification check (01 - Successful; 02 - Not successful; 03 - Not determined)",
            "example": "01",
            "type": "string"
          },
          "PaytCardCSCVerificatStatusName": {
            "description": "Status name or human-readable error description if status is not 01",
            "example": "Successful",
            "type": "string"
          },
          "PaytCardAddressVerificationSts": {
            "description": "Code value representing the status of a payment card address verification check (01 - Address and zip code check successful; 02 - Address check successful, zip code check not successful; 03 - Address check not successful, zip code check successful; 04 - Address and zip code check not successful; 05 - Not determined)",
            "example": "05",
            "type": "string"
          },
          "PaytCardAddrVerificatStsName": {
            "description": "Status name or human-readable error description if status is not 01",
            "example": "Not determined",
            "type": "string"
          },
          "DgtlPaytAuthznRelationID": {
            "maxLength": 44,
            "description": "Unique identifier of a successful authorization representing a link to the current authorization request. Can be used in a later payment authorization request to refer to the (automatic) approval provided with this authorization.",
            "example": "ASD64536WE36483623235864",
            "type": "string"
          }
        }
      },
      "authorizationResponses": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authorizationResponse"
            }
          }
        }
      },
      "authorizationCancelRequest": {
        "type": "object",
        "properties": {
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "AuthorizationByPaytSrvcPrvdr": {
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "AuthorizationByDigitalPaytSrvc": {
            "description": "Unique 10-character identifier provided by the SAP digital payments add-on. Can be used as an alternative to the identifier provided by the PSP if the system that is connected cannot process long authorization identifiers.",
            "example": "ILZSGWLACY",
            "type": "string"
          },
          "ReferenceDocument": {
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          }
        },
        "required": [
          "Source"
        ]
      },
      "authorizationCancelRequests": {
        "type": "object",
        "properties": {
          "CancelAuthorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authorizationCancelRequest"
            }
          }
        }
      },
      "authorizationCancelResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "AuthorizationByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "AuthorizationByDigitalPaytSrvc": {
            "maxLength": 10,
            "description": "Unique 10-character identifier provided by the SAP digital payments add-on. Can be used as an alternative to the identifier provided by the PSP if the system that is connected cannot process long authorization identifiers.",
            "example": "ILZSGWLACY",
            "type": "string"
          },
          "AuthorizationCancelStatus": {
            "description": "Status code value (100 - Successful; 299 - Processing error; 301 - Cancel Authorization error; 302 - Authorization already charged error)",
            "example": "100",
            "type": "string"
          },
          "AuthorizationCancelStatusName": {
            "maxLength": 1000,
            "description": "Status name or human-readable error description if AuthorizationCancelStatus is not 100. Text is provided by PSP and will not be translated.",
            "example": "Transaction must be in the authorized state",
            "type": "string"
          }
        }
      },
      "authorizationCancelResponses": {
        "type": "object",
        "properties": {
          "CanceledAuthorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authorizationCancelResponse"
            }
          }
        }
      },
      "charge": {
        "type": "object",
        "properties": {
          "PaymentByPaymentServicePrvdr": {
            "description": "Unique identifier provided by a PSP to represent a payment/charge",
            "example": "paym_4711",
            "type": "string"
          },
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on for a payment. Equivalent to DigitalPaymentTransaction",
            "example": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
            "type": "string"
          },
          "AmountInPaymentCurrency": {
            "pattern": "^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Paid/Charged amount. The following pattern is used for validation: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "PaymentCurrency": {
            "description": "Currency code (using ISO 4217) of the paid/charged amount",
            "example": "EUR",
            "type": "string"
          },
          "PaymentDateTime": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "description": "Timestamp (UTC) indicating when the payment/charge was processed at the PSP",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "PaymentStatus": {
            "description": "Deprecated. Status code value (01 - Successful; 02 - Not successful) <br> Use DetailedPaymentStatus instead.",
            "example": "01",
            "type": "string"
          },
          "DetailedPaymentStatus": {
            "description": "Detailed status code values: <br> 100 - Successful <br> 110 - Pending <br> 201 - Limit exceeded <br> 202 - Temporary processing error <br> 210 - Card data invalid <br> 211 - Card expired <br> 212 - Card declined <br> 213 - Fraudulent transaction <br> 220 - Data validation error <br> 221 - Missing authorization <br> 222 - Transaction declined <br> 299 - Processing error <br> 400 - Authorization expired",
            "example": "100",
            "type": "string"
          },
          "PaymentStatusName": {
            "description": "Status name or human-readable error description if DetailedPaymentStatus is not 100",
            "example": "Successful",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier: Only provided for reporting purposes",
            "example": "SHOPEUR",
            "type": "string"
          }
        },
        "required": [
          "PaymentByDigitalPaymentService"
        ]
      },
      "chargeRequest": {
        "type": "object",
        "properties": {
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "AmountInPaymentCurrency": {
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "maxLength": 40,
            "description": "Amount to be paid/charged. The following pattern is used for validation: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "PaymentCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "description": "Currency code (using ISO 4217) of the amount to be paid/charged",
            "example": "EUR",
            "type": "string"
          },
          "PaymentTransactionDescription": {
            "description": "Text that will be displayed in capital letters on a customer's credit card statement (depending on the functionality provided by the PSP). It is advisable to mention your company's name. Maximum length: 22 characters",
            "example": "COMPANY NAME",
            "type": "string"
          },
          "PaymentIsToBeCaptured": {
            "description": "Indicator showing whether a payment is to be captured with or without prior authorization",
            "example": false,
            "type": "boolean"
          },
          "ReferenceDocument": {
            "maxLength": 50,
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "DigitalPaymentSettlementRef": {
            "maxLength": 16,
            "pattern": "^[A-Z0-9-]{0,16}$",
            "description": "Identifier provided by the consumer application to represent the settlement run",
            "example": "578",
            "type": "string"
          },
          "CompanyCode": {
            "description": "Routing parameter to determine PSP and associated merchant ID using company code",
            "example": "1010",
            "type": "string"
          },
          "CustomerCountry": {
            "description": "Routing parameter to determine PSP and associated merchant ID using country of customer",
            "example": "DE",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "Routing parameter to determine PSP and associated merchant ID using payment method (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/externalPaymentType"
          },
          "CustomParameterValue": {
            "description": "Routing parameter to determine PSP and associated merchant ID using custom value",
            "type": "string"
          },
          "DgtlPaytSenderLogicalSystem": {
            "maxLength": 20,
            "description": "Routing parameter to determine PSP and associated merchant ID using the unique identifier of the system sending the request to the SAP digital payments add-on",
            "example": "0030390170AB3CLNT700",
            "type": "string"
          },
          "CustomerAccountNumber": {
            "description": "Level 2 data: Customer account number",
            "example": "1029384756",
            "type": "string"
          },
          "Authorization": {
            "$ref": "#/components/schemas/authorization"
          },
          "DigitalPaymentCommerceType": {
            "$ref": "#/components/schemas/digitalPaymentCommerceType"
          },
          "PaymentCardAuthznRelationID": {
            "maxLength": 44,
            "description": "Obsolete - use DgtlPaytAuthznRelationID instead",
            "type": "string"
          },
          "DgtlPaytAuthznRelationID": {
            "maxLength": 44,
            "description": "Unique identifier representing a link to most recent authorization. Will be used if an automatic 3DS reauthorization is required, because the authorization provided in the request has expired.",
            "type": "string"
          },
          "DgtlPaytAuthznScenarioType": {
            "$ref": "#/components/schemas/digitalPaymentAuthorizationScenarioType"
          },
          "L2L3Data": {
            "$ref": "#/components/schemas/l2L3TransactionLevel"
          }
        },
        "required": [
          "AmountInPaymentCurrency",
          "PaymentCurrency"
        ]
      },
      "chargeRequests": {
        "type": "object",
        "properties": {
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chargeRequest"
            }
          }
        }
      },
      "chargeResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "Charge": {
            "$ref": "#/components/schemas/charge"
          },
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "PaytCardCSCVerificationStatus": {
            "description": "Code value representing the status of a payment card security code verification check (01 - Successful; 02 - Not successful; 03 - Not determined)",
            "example": "01",
            "type": "string"
          },
          "PaytCardCSCVerificatStatusName": {
            "description": "Status name or human-readable error description if status is not 01",
            "example": "Successful",
            "type": "string"
          },
          "PaytCardAddressVerificationSts": {
            "description": "Code value representing the status of a payment card address verification check (01 - Address and zip code check successful; 02 - Address check successful, zip code check not successful; 03 - Address check not successful, zip code check successful; 04 - Address and zip code check not successful; 05 - Not determined)",
            "example": "05",
            "type": "string"
          },
          "PaytCardAddrVerificatStsName": {
            "description": "Status name or human-readable error description if status is not 01",
            "example": "Not determined",
            "type": "string"
          },
          "PaymentCardAuthznRelationID": {
            "maxLength": 44,
            "description": "Unique identifier representing a link to most recent authorization. Only provided if charge on payment card. Will be returned if an automatic 3DS reauthorization was performed, because the authorization provided in the request had expired.",
            "type": "string"
          },
          "DgtlPaytAuthznRelationID": {
            "maxLength": 44,
            "description": "Unique identifier representing a link to most recent authorization. If direct capture using payment card, the same value as PaymentCardAuthznRelationID.",
            "type": "string"
          }
        }
      },
      "chargeResponses": {
        "type": "object",
        "properties": {
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/chargeResponse"
            }
          }
        }
      },
      "refund": {
        "type": "object",
        "properties": {
          "RefundByPaymentServiceProvider": {
            "description": "Unique identifier provided by a PSP to represent a refund",
            "example": "re_4711",
            "type": "string"
          },
          "PaymentByPaymentServicePrvdr": {
            "description": "Unique identifier provided by a PSP to represent a payment/charge",
            "example": "paym_4711",
            "type": "string"
          },
          "AmountInRefundCurrency": {
            "description": "Refunded amount. The following pattern is used: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "RefundCurrency": {
            "description": "Currency code (using ISO 4217) of the refunded amount",
            "example": "EUR",
            "type": "string"
          },
          "RefundDateTime": {
            "description": "Timestamp (UTC) indicating when the refund was processed at the PSP. The following pattern is used: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "RefundStatus": {
            "description": "Deprecated. Status code value (01 - Successful; 02 - Not successful) <br> Use DetailedRefundStatus instead.",
            "example": "01",
            "type": "string"
          },
          "DetailedRefundStatus": {
            "description": "Detailed status code values: <br> 100 - Successful <br> 201 - Limit exceeded <br> 202 - Temporary processing error <br> 210 - Card data invalid <br> 211 - Card expired <br> 212 - Card declined <br> 213 - Fraudulent transaction <br> 220 - Data validation error <br> 221 - Missing authorization <br> 222 - Transaction declined <br> 299 - Processing error <br> 500 - Refund amount too high <br> 501 - Refund too late",
            "example": "100",
            "type": "string"
          },
          "RefundStatusName": {
            "description": "Status name or human-readable error description if DetailedRefundStatus is not 100",
            "example": "Successful",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier: Only provided for reporting purposes",
            "example": "SHOPEUR",
            "type": "string"
          },
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on to represent a payment",
            "example": "15e86080494113cfc0a48634e47b4f4d956f0b0381a",
            "type": "string"
          }
        }
      },
      "refundRequest": {
        "type": "object",
        "properties": {
          "Source": {
            "$ref": "#/components/schemas/source"
          },
          "AmountInRefundCurrency": {
            "description": "Amount to be refunded (credited if blind credit). The following pattern is used for validation: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "RefundCurrency": {
            "description": "Currency code (using ISO 4217) of the amount to be refunded (credited if blind credit)",
            "example": "EUR",
            "type": "string"
          },
          "PaymentTransactionDescription": {
            "description": "Text that will be displayed in capital letters on a customer's credit card statement (depending on the functionality provided by the PSP). It is advisable to mention your company's name. Maximum length: 22 characters",
            "example": "COMPANY NAME MERCHANT (22 characters maximum)",
            "type": "string"
          },
          "PaymentByPaymentServicePrvdr": {
            "description": "Unique identifier provided by a PSP to represent a payment/charge",
            "example": "paym_4711",
            "type": "string"
          },
          "ReferenceDocument": {
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "DigitalPaymentSettlementRef": {
            "maxLength": 16,
            "pattern": "^[A-Z0-9-]{0,16}$",
            "description": "Identifier provided by the consumer application to represent the settlement run",
            "example": "578",
            "type": "string"
          },
          "CompanyCode": {
            "description": "Routing parameter to determine PSP and associated merchant ID using company code",
            "example": "1010",
            "type": "string"
          },
          "CustomerCountry": {
            "description": "Routing parameter to determine PSP and associated merchant ID using country of customer",
            "example": "DE",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "Routing parameter to determine PSP and associated merchant ID using payment method (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/externalPaymentType"
          },
          "CustomParameterValue": {
            "description": "Routing parameter to determine PSP and associated merchant ID using custom value",
            "type": "string"
          },
          "DgtlPaytSenderLogicalSystem": {
            "maxLength": 20,
            "description": "Routing parameter to determine PSP and associated merchant ID using the unique identifier of the system sending the request to the SAP digital payments add-on",
            "example": "0030390170AB3CLNT700",
            "type": "string"
          }
        },
        "required": [
          "Source",
          "AmountInRefundCurrency",
          "RefundCurrency"
        ]
      },
      "refundRequests": {
        "type": "object",
        "properties": {
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/refundRequest"
            }
          }
        }
      },
      "refundResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "Refund": {
            "$ref": "#/components/schemas/refund"
          },
          "Source": {
            "$ref": "#/components/schemas/source"
          }
        }
      },
      "refundResponses": {
        "type": "object",
        "properties": {
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/refundResponse"
            }
          }
        }
      },
      "digitalPaymentTransaction": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "description": "Unique identifier provided by SAP to represent a transaction processed in the SAP digital payments add-on",
            "example": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
            "type": "string"
          },
          "DigitalPaymentDateTime": {
            "description": "Timestamp (UTC) indicating when the transaction was processed in the SAP digital payments add-on. The following pattern is used for validation: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "DigitalPaytTransResult": {
            "description": "Result of a digital payment transaction (01 - Successful, 02 - Not successful, 03 - Pending, 04 - Timeout, 05 - Canceled)",
            "example": "01",
            "type": "string"
          },
          "DigitalPaytTransRsltDesc": {
            "description": "Description of the transaction result (only to be filled if DigitalPaytTransResult has the value 02 - Not successful). Description will not be translated.",
            "example": "ERR_01: Missing credentials",
            "type": "string"
          },
          "RequestByPaytSrvcPrvdr": {
            "maxLength": 40,
            "description": "Request ID provided by the PSP. This field may only be filled in a response from the SAP digital payments add-on. Use this ID to identify your request at the PSP.",
            "example": "CB4ZG64HI",
            "type": "string"
          },
          "ReferenceDocument": {
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "Error": {
            "$ref": "#/components/schemas/extendedError"
          }
        }
      },
      "adviceHeader": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "AdviceRequest": {
            "$ref": "#/components/schemas/adviceRequest"
          }
        }
      },
      "adviceRequest": {
        "type": "object",
        "properties": {
          "FromDate": {
            "description": "From date in format yyyy-mm-dd",
            "example": "2018-10-26",
            "type": "string"
          },
          "ToDate": {
            "description": "To date in format yyyy-mm-dd",
            "example": "2018-12-01",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "Filter for the advice items based on the payment method (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "Account": {
            "maxLength": 256,
            "description": "Depending on the payment method, an account (PSP merchant ID) may be necessary to access data for advice items. Maximum length of field: 80 characters",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          }
        },
        "required": [
          "FromDate",
          "ToDate",
          "PaymentMethod"
        ]
      },
      "adviceTransaction": {
        "type": "object",
        "properties": {
          "TransactionByPaytSrvcPrvdr": {
            "description": "Unique identifier of a transaction processed by a PSP",
            "example": "ch_36453645364836",
            "type": "string"
          },
          "ReferenceDocument": {
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "AmountInTransactionCurrency": {
            "description": "Amount of the transaction in the transaction currency",
            "example": "123.45",
            "type": "string"
          },
          "FeeAmountInTransactionCrcy": {
            "description": "Fee for the transaction in the transaction currency (excluding taxes and spread of FX rates)",
            "example": "1.23",
            "type": "string"
          },
          "TransactionCurrency": {
            "description": "Currency code (using ISO 4217) of the transaction amount (usually in the same currency as the currency of the account held at the PSP)",
            "example": "EUR",
            "type": "string"
          },
          "TransactionFeePercentage": {
            "description": "Fee percentage for the transaction. This field must be empty if FeeAmountInTransactionCrcy and FeeAmountInOriginalCrcy are provided.",
            "example": "1.00",
            "type": "string"
          },
          "AmountInOriginalCurrency": {
            "description": "Amount of the transaction in the original currency",
            "example": "123.45",
            "type": "string"
          },
          "FeeAmountInOriginalCrcy": {
            "description": "Fee for the transaction in the original currency. This field must be empty if TransactionFeePercentage is provided.",
            "example": "1.23",
            "type": "string"
          },
          "OriginalCurrency": {
            "description": "Currency code (using ISO 4217) of the amount in which the transaction was originally processed (e.g. for a charged payment, the currency of this payment)",
            "example": "EUR",
            "type": "string"
          },
          "TaxAmount": {
            "description": "Amount of VAT on the fees in the transaction currency",
            "example": "0.27",
            "type": "string"
          },
          "FinancialTransactionType": {
            "description": "Financial transaction type (Charge, Refund, or Bank-to-Bank)",
            "example": "Charge",
            "type": "string"
          }
        }
      },
      "adviceResponses": {
        "type": "object",
        "properties": {
          "AdviceHeader": {
            "$ref": "#/components/schemas/adviceHeader"
          },
          "Transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/adviceTransaction"
            }
          }
        }
      },
      "invoiceDetails": {
        "type": "object",
        "properties": {
          "Invoice": {
            "description": "Invoice identifier which can be added to the payment to facilitate reconciliation",
            "example": "INV-3384932439",
            "type": "string"
          },
          "InvoiceGrossAmount": {
            "description": "Gross amount of the invoice (the amount to be paid). The following pattern is used for validation: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "example": "123.45",
            "type": "string"
          },
          "InvoiceCurrency": {
            "description": "Currency code (using ISO 4217) of the invoice (currency of the amount to be paid)",
            "example": "EUR",
            "type": "string"
          }
        },
        "required": [
          "Invoice",
          "InvoiceGrossAmount",
          "InvoiceCurrency"
        ]
      },
      "externalPayment": {
        "type": "object",
        "properties": {
          "ExtPaytByPaytSrvcPrvdr": {
            "description": "Identifier for the external payment provided by the PSP",
            "type": "string"
          },
          "TransactionByPaytSrvcPrvdr": {
            "description": "Identifier for the transaction (authorization, charge, etc.) provided by the PSP",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier: Only provided for reporting purposes",
            "type": "string"
          },
          "InvoiceDetails": {
            "$ref": "#/components/schemas/invoiceDetails"
          },
          "PaymentTransactionDescription": {
            "maxLength": 22,
            "description": "Text that will be displayed in capital letters on a customer's advice/statement (depending on the functionality provided by the PSP). It is advisable to mention your company's name.",
            "example": "COMPANY NAME MERCHANT",
            "type": "string"
          },
          "CreationDateTime": {
            "description": "UTC creation time of the external payment. The  following pattern is used: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "ExternalPaymentStatus": {
            "description": "Deprecated. Use DetailedExternalPaymentStatus instead",
            "type": "string"
          },
          "DetailedExternalPaymentStatus": {
            "description": "Status code values: <br> 100 - Successful <br> 110 - Pending <br> 201 - Limit exceeded <br> 202 - Temporary processing error <br> 210 - Card data invalid <br> 211 - Card expired <br> 212 - Card declined <br> 213 - Fraudulent transaction <br> 220 - Data validation error <br> 221 - Missing authorization <br> 222 - Transaction declined <br> 299 - Processing error",
            "example": "100",
            "type": "string"
          },
          "ExternalPaymentStatusName": {
            "maxLength": 255,
            "description": "Status name or human-readable error description if DetailedExternalPaymentStatus is not 100. Text is provided by PSP and will not be translated.",
            "example": "Temporary processing error",
            "type": "string"
          },
          "AuthorizationByDigitalPaytSrvc": {
            "description": "Unique 10-character identifier provided by the SAP digital payments add-on. Can be used as an alternative to the identifier provided by the PSP if the system that is connected cannot process long authorization identifiers.",
            "example": "ILZSGWLACY",
            "type": "string"
          },
          "AuthorizationExpirationDateTme": {
            "description": "UTC expiration time of the external payment authorization. The following pattern is used: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z. This field is only relevant for (re-)authorizations.",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "AuthorizationExpirationDateTime": {
            "description": "Deprecated. Use AuthorizationExpirationDateTme instead",
            "type": "string"
          }
        }
      },
      "externalPaymentV2": {
        "type": "object",
        "properties": {
          "ExtPaytByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Identifier for the external payment provided by the PSP",
            "type": "string"
          },
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on for a payment. Equivalent to DigitalPaymentTransaction",
            "example": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier",
            "type": "string"
          },
          "AmountInPaymentCurrency": {
            "maxLength": 40,
            "pattern": "^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Payment amount",
            "example": "123.45",
            "type": "string"
          },
          "PaymentCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Za-z]{3}$",
            "description": "Currency code (using ISO 4217) of the payment amount",
            "example": "EUR",
            "type": "string"
          },
          "CreationDateTime": {
            "minLength": 20,
            "maxLength": 24,
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "description": "UTC creation time of the external payment. The following pattern is used: \\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?Z",
            "example": "2018-06-19T14:20:52Z",
            "type": "string"
          },
          "DetailedExternalPaymentStatus": {
            "$ref": "#/components/schemas/processingStatus"
          },
          "ExternalPaymentStatusName": {
            "maxLength": 255,
            "description": "Status name or human-readable error description if DetailedExternalPaymentStatus is not 100. Text is provided by PSP and will not be translated.",
            "example": "Temporary processing error",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier: Only provided for reporting purposes",
            "type": "string"
          }
        },
        "required": [
          "ExtPaytByPaytSrvcPrvdr",
          "PaymentByDigitalPaymentService",
          "MerchantAccount",
          "AmountInPaymentCurrency",
          "PaymentCurrency",
          "DetailedExternalPaymentStatus"
        ]
      },
      "externalPaymentType": {
        "description": "Identifier indicating the type of external payment that is to be performed",
        "example": "PP",
        "enum": [
          "PP"
        ],
        "type": "string"
      },
      "digitalPaymentDirectCaptureType": {
        "description": "Identifier indicating the type of direct capture performed",
        "example": "DP1P",
        "enum": [
          "ACH1",
          "ALI1",
          "DP1P",
          "DPC1",
          "IDE1",
          "KLA1",
          "SOF1",
          "AFP1",
          "GIR1",
          "PRZ1",
          "EPS1",
          "PFC1",
          "PFE1",
          "BAC1",
          "VIC1",
          "GOP1",
          "APP1",
          "BIT1",
          "WEC1",
          "MIC1"
        ],
        "type": "string"
      },
      "digitalPaymentAuthorizationType": {
        "description": "Identifier indicating the type of authorization performed",
        "example": "DP2P",
        "enum": [
          "ALI2",
          "DP2P",
          "KLA2",
          "AFP2",
          "GOP2",
          "APP2",
          "MOP2",
          "DPC2"
        ],
        "type": "string"
      },
      "merchant": {
        "type": "object",
        "properties": {
          "PaymentServiceProvider": {
            "description": "Four-character PSP code with which the transaction was performed",
            "example": "DPXX",
            "type": "string"
          },
          "Account": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          }
        }
      },
      "extendedError": {
        "title": "Error Response",
        "type": "object",
        "properties": {
          "Id": {
            "description": "Unique identifier of the error",
            "type": "string"
          },
          "Message": {
            "description": "Generic message e.g. Internal server error occurred",
            "type": "string"
          },
          "DetailedMessage": {
            "description": "Human-readable error message",
            "type": "string"
          },
          "ErrorTimestamp": {
            "description": "Timestamp (ISO 8601) indicating when the error occurred",
            "type": "string"
          },
          "CorrelationId": {
            "description": "The ID to identify the transaction generated from one single request",
            "type": "string"
          },
          "RequestByPaytSrvcPrvdr": {
            "maxLength": 40,
            "description": "Request ID provided by the PSP. This is a unique identifier for use by the consumer application.",
            "example": "CB4ZG64HI",
            "type": "string"
          },
          "SourceArtifact": {
            "description": "Artifact identifying the source of the error, e.g. the component",
            "type": "string"
          },
          "MessageAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorResponseNameValue"
            }
          }
        },
        "required": [
          "Id",
          "Message"
        ]
      },
      "errorResponseNameValue": {
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name",
            "type": "string"
          },
          "Value": {
            "description": "Value",
            "type": "string"
          }
        }
      },
      "digitalPaymentCommerceType": {
        "description": "Type of commerce associated with the transaction request supported by the SAP digital payments add-on.<br>MOTO indicates that a Mail Order or a Telephone Order is being processed. ECOMMERCE indicates that a transaction is being performed using an online service or via the Internet.<br>The commerce type MOTO is not compatible with the session type ONLINE.",
        "enum": [
          "ECOMMERCE",
          "MOTO"
        ],
        "type": "string"
      },
      "getRegistrationUrlRequest": {
        "type": "object",
        "properties": {
          "ConsumerRedirectUrl": {
            "description": "Target URL to which to redirect after registering a payment card at the PSP. Note that some browsers or PSPs may not support the full string length.",
            "example": "https://www.myurl.com/PSP/",
            "type": "string"
          },
          "RoutingParameters": {
            "$ref": "#/components/schemas/routingParameters"
          },
          "DigitalPaymentCommerceType": {
            "$ref": "#/components/schemas/digitalPaymentCommerceType"
          },
          "DigitalPaymentSessionType": {
            "$ref": "#/components/schemas/digitalPaymentSessionType"
          },
          "PaytCardRegnLifeCycleType": {
            "$ref": "#/components/schemas/paytCardRegnLifeCycleType"
          }
        }
      },
      "routingParameters": {
        "description": "Routing parameters to determine PSP and associated merchant ID",
        "type": "object",
        "properties": {
          "CustomParameterValue": {
            "description": "Routing parameter to determine PSP and associated merchant ID using custom value",
            "type": "string"
          },
          "CompanyCode": {
            "description": "Routing parameter to determine PSP and associated merchant ID using company code",
            "example": "1010",
            "type": "string"
          },
          "CustomerCountry": {
            "description": "Routing parameter to determine PSP and associated merchant ID using country of customer",
            "example": "DE",
            "type": "string"
          },
          "PaymentMethod": {
            "description": "Routing parameter to determine PSP and associated merchant ID using payment method (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "Currency": {
            "description": "Routing parameter to determine PSP and associated merchant ID using currency",
            "example": "EUR",
            "type": "string"
          },
          "PaymentType": {
            "$ref": "#/components/schemas/externalPaymentType"
          },
          "DgtlPaytSenderLogicalSystem": {
            "maxLength": 20,
            "description": "Routing parameter to determine PSP and associated merchant ID using the unique identifier of the system sending the request to the SAP digital payments add-on",
            "example": "0030390170AB3CLNT700",
            "type": "string"
          }
        }
      },
      "paymentServiceProvider": {
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 4,
            "description": "Code of the payment service provider",
            "example": "DPDU",
            "type": "string"
          },
          "Description": {
            "maxLength": 100,
            "description": "Description of the payment service provider",
            "example": "Payments Inc.",
            "type": "string"
          },
          "PaymentMethods": {
            "description": "Payment Methods which are assigned to this Payment Service Provider",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentMethod"
            }
          }
        },
        "required": [
          "Code"
        ]
      },
      "paymentMethod": {
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 2,
            "description": "Method of payment (CC - Credit Card, EP - External Payment)",
            "example": "CC",
            "type": "string"
          },
          "Descriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/description"
            }
          }
        },
        "required": [
          "Code"
        ]
      },
      "description": {
        "type": "object",
        "properties": {
          "Language": {
            "maxLength": 2,
            "description": "ISO code of the description language",
            "example": "en",
            "type": "string"
          },
          "Description": {
            "maxLength": 120,
            "description": "Description of the entity",
            "example": "Asynchronous communication (default)",
            "type": "string"
          }
        }
      },
      "getTokenForPaymentCardWithAuthorizationResponses": {
        "type": "object",
        "properties": {
          "PaymentCardsWithAuthorization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardWithAuthorizationResponse"
            }
          }
        }
      },
      "getTokenForPaymentCardWithAuthorizationResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaytCardByPaytServiceProvider": {
            "maxLength": 40,
            "description": "Payment card token (as defined by the PSP)",
            "example": "tok4711",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character PSP code with which a transaction was performed",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) used to create the authorization",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "Authorization": {
            "$ref": "#/components/schemas/authorization"
          },
          "Source": {
            "$ref": "#/components/schemas/source"
          }
        },
        "required": [
          "DigitalPaymentTransaction",
          "PaytCardByPaytServiceProvider",
          "PaymentServiceProvider",
          "MerchantAccount"
        ]
      },
      "getTokenForPaymentCardWithAuthorizationRequests": {
        "type": "object",
        "properties": {
          "PaymentCardsWithAuthorization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardWithAuthorizationRequest"
            }
          }
        }
      },
      "getTokenForPaymentCardWithAuthorizationRequest": {
        "type": "object",
        "properties": {
          "AuthorizationByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "PaytCardByPaytServiceProvider": {
            "maxLength": 40,
            "description": "Payment card token (as defined by the PSP) used to create the authorization",
            "example": "tok4711",
            "type": "string"
          },
          "PaymentCardContext": {
            "$ref": "#/components/schemas/paymentCardContext"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the payment card was registered",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) used to create the authorization",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "AuthorizedAmountInAuthznCrcy": {
            "maxLength": 40,
            "pattern": "^-?(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Amount authorized with the authorization at the PSP",
            "example": "123.45",
            "type": "string"
          },
          "AuthorizationCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Za-z]{3}$",
            "description": "Currency code (using ISO 4217) of the authorized amount",
            "example": "EUR",
            "type": "string"
          },
          "DigitalPaymentCommerceType": {
            "$ref": "#/components/schemas/digitalPaymentCommerceType"
          },
          "DigitalPaymentSessionType": {
            "$ref": "#/components/schemas/digitalPaymentSessionType"
          },
          "PaytCardRegnLifeCycleType": {
            "$ref": "#/components/schemas/paytCardRegnLifeCycleType"
          }
        },
        "required": [
          "AuthorizationByPaytSrvcPrvdr",
          "PaytCardByPaytServiceProvider",
          "PaymentServiceProvider",
          "MerchantAccount",
          "AuthorizedAmountInAuthznCrcy",
          "AuthorizationCurrency",
          "DigitalPaymentCommerceType",
          "DigitalPaymentSessionType"
        ]
      },
      "getTokenForPaymentCardResponses": {
        "type": "object",
        "properties": {
          "PaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardResponse"
            }
          }
        }
      },
      "getTokenForPaymentCardResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaytCardByPaytServiceProvider": {
            "maxLength": 40,
            "description": "Payment card token (as defined by the PSP)",
            "example": "tok4711",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character PSP code with which the transaction was performed",
            "example": "DPXX",
            "type": "string"
          },
          "Source": {
            "$ref": "#/components/schemas/source"
          }
        },
        "required": [
          "DigitalPaymentTransaction"
        ]
      },
      "getTokenForPaymentCardRequests": {
        "type": "object",
        "properties": {
          "PaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardRequest"
            }
          }
        }
      },
      "getTokenForPaymentCardRequest": {
        "type": "object",
        "properties": {
          "PaytCardByPaytServiceProvider": {
            "maxLength": 40,
            "description": "Payment card token (as defined by the PSP)",
            "example": "tok4711",
            "type": "string"
          },
          "PaymentCardContext": {
            "$ref": "#/components/schemas/paymentCardContext"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the payment card was registered",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier with which the payment card was registered. May be omitted if payment card registration is handled by the PSP on an 'any merchant' basis.",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "PaytCardRegnLifeCycleType": {
            "$ref": "#/components/schemas/paytCardRegnLifeCycleType"
          }
        },
        "required": [
          "PaytCardByPaytServiceProvider",
          "PaymentServiceProvider"
        ]
      },
      "getTokenForPaymentCardAuthorizationRequest": {
        "type": "object",
        "properties": {
          "AuthorizationByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "maxLength": 25,
            "description": "Payment card token provided by the SAP digital payments add-on. The payment card represented by this token must be the payment card that was used for the authorization.",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) used to create the authorization",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "AuthorizedAmountInAuthznCrcy": {
            "maxLength": 40,
            "pattern": "^-?(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Amount authorized with the authorization at the PSP",
            "example": "123.45",
            "type": "string"
          },
          "AuthorizationCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Za-z]{3}$",
            "description": "Currency code (using ISO 4217) of the authorized amount",
            "example": "EUR",
            "type": "string"
          },
          "DigitalPaymentCommerceType": {
            "$ref": "#/components/schemas/digitalPaymentCommerceType"
          },
          "DigitalPaymentSessionType": {
            "$ref": "#/components/schemas/digitalPaymentSessionType"
          }
        },
        "required": [
          "AuthorizationByPaytSrvcPrvdr",
          "PaytCardByDigitalPaymentSrvc",
          "MerchantAccount",
          "AuthorizedAmountInAuthznCrcy",
          "AuthorizationCurrency",
          "DigitalPaymentCommerceType",
          "DigitalPaymentSessionType"
        ]
      },
      "getTokenForPaymentCardAuthorizationRequests": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardAuthorizationRequest"
            }
          }
        }
      },
      "getTokenForPaymentCardAuthorizationResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "maxLength": 25,
            "description": "Payment card token provided by the SAP digital payments add-on. The payment card represented by this token must be the payment card that was used for the authorization.",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) used to create the authorization",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "Authorization": {
            "$ref": "#/components/schemas/authorization"
          }
        },
        "required": [
          "DigitalPaymentTransaction",
          "PaytCardByDigitalPaymentSrvc",
          "MerchantAccount"
        ]
      },
      "getTokenForPaymentCardAuthorizationResponses": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForPaymentCardAuthorizationResponse"
            }
          }
        }
      },
      "getTokenForAuthorizationRequest": {
        "type": "object",
        "properties": {
          "AuthorizationByPaytSrvcPrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent an authorization",
            "example": "auth_4711",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the authorization was created",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) for which the authorization was created",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "DigitalPaymentAuthorizationType": {
            "$ref": "#/components/schemas/digitalPaymentAuthorizationType"
          },
          "AuthorizedAmountInAuthznCrcy": {
            "maxLength": 40,
            "pattern": "^-?(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Amount authorized with the authorization at the PSP",
            "example": "123.45",
            "type": "string"
          },
          "AuthorizationCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Za-z]{3}$",
            "description": "Currency code (using ISO 4217) of the authorized amount",
            "example": "EUR",
            "type": "string"
          }
        },
        "required": [
          "AuthorizationByPaytSrvcPrvdr",
          "PaymentServiceProvider",
          "MerchantAccount",
          "DigitalPaymentAuthorizationType",
          "AuthorizedAmountInAuthznCrcy",
          "AuthorizationCurrency"
        ]
      },
      "getTokenForAuthorizationRequests": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForAuthorizationRequest"
            }
          }
        }
      },
      "getTokenForAuthorizationResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the authorization was created",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "Authorization": {
            "$ref": "#/components/schemas/authorization"
          }
        },
        "required": [
          "DigitalPaymentTransaction",
          "PaymentServiceProvider",
          "MerchantAccount"
        ]
      },
      "getTokenForAuthorizationResponses": {
        "type": "object",
        "properties": {
          "Authorizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForAuthorizationResponse"
            }
          }
        }
      },
      "digitalPaymentSessionType": {
        "description": "Type of session associated with the creation of the business transaction, indicating whether the end user (e. g. cardholder) is/was present during the transaction (ONLINE) or not (OFFLINE). To be considered as ONLINE, the end user must be able to react to inquiries from the system via the user interface. An agent (e.g. a call center agent) is not considered equivalent to an end user.<br>The session type ONLINE is not compatible with the commerce type MOTO.",
        "enum": [
          "ONLINE",
          "OFFLINE"
        ],
        "type": "string"
      },
      "getTokenForDirectCaptureResponses": {
        "type": "object",
        "properties": {
          "DirectCaptures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForDirectCaptureResponse"
            }
          }
        }
      },
      "getTokenForDirectCaptureResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "PaymentByPaymentServicePrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent a direct capture",
            "example": "paym_4711",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the direct capture was created",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "PSP merchant (account) identifier",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on for a payment. Equivalent to DigitalPaymentTransaction",
            "example": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
            "type": "string"
          },
          "MerchantAlias": {
            "maxLength": 15,
            "description": "Merchant alias identifier",
            "example": "SHOPEUR",
            "type": "string"
          }
        },
        "required": [
          "DigitalPaymentTransaction",
          "PaymentByPaymentServicePrvdr",
          "PaymentServiceProvider",
          "MerchantAccount",
          "PaymentByDigitalPaymentService"
        ]
      },
      "getTokenForDirectCaptureRequests": {
        "type": "object",
        "properties": {
          "DirectCaptures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getTokenForDirectCaptureRequest"
            }
          }
        }
      },
      "getTokenForDirectCaptureRequest": {
        "type": "object",
        "properties": {
          "PaymentByPaymentServicePrvdr": {
            "maxLength": 30,
            "description": "Unique identifier provided by a PSP to represent a direct capture",
            "example": "paym_4711",
            "type": "string"
          },
          "PaymentServiceProvider": {
            "minLength": 4,
            "maxLength": 4,
            "description": "Four-character code provided by the SAP digital payments add-on for the PSP at which the direct capture was registered",
            "example": "DPXX",
            "type": "string"
          },
          "MerchantAccount": {
            "maxLength": 256,
            "description": "Identifier of the PSP merchant (account) used to create the direct capture",
            "example": "SHOP_USD or SALES_NORTH or 12345@psp_name.com",
            "type": "string"
          },
          "DigitalPaymentDirectCaptureType": {
            "$ref": "#/components/schemas/digitalPaymentDirectCaptureType"
          },
          "AmountInPaymentCurrency": {
            "maxLength": 40,
            "pattern": "^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Amount of the direct capture",
            "example": "123.45",
            "type": "string"
          },
          "PaymentCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "description": "Currency code (using ISO 4217) of the direct capture",
            "example": "EUR",
            "type": "string"
          }
        },
        "required": [
          "PaymentByPaymentServicePrvdr",
          "PaymentServiceProvider",
          "MerchantAccount",
          "DigitalPaymentDirectCaptureType",
          "AmountInPaymentCurrency",
          "PaymentCurrency"
        ]
      },
      "paymentCardContext": {
        "description": "Additional contextual information of the payment card token, which is needed at the PSP so it can be passed to the SAP digital payments add-on. Depending on which PSP is used, the provision of this information may be optional or mandatory. For further details, refer to the PSP documentation.",
        "example": {
          "RequestId": "1234"
        },
        "type": "object"
      },
      "getExternalPaymentsByDPPaymentRequest": {
        "type": "object",
        "properties": {
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on for a payment. Equivalent to DigitalPaymentTransaction",
            "example": "15d73bda6fb690bb405cd8a4410acd55de92d266a31",
            "type": "string"
          }
        },
        "required": [
          "PaymentByDigitalPaymentService"
        ]
      },
      "externalPaymentResponse": {
        "type": "object",
        "properties": {
          "DigitalPaymentTransaction": {
            "$ref": "#/components/schemas/digitalPaymentTransaction"
          },
          "ExternalPayment": {
            "$ref": "#/components/schemas/externalPaymentV2"
          }
        },
        "required": [
          "DigitalPaymentTransaction",
          "ExternalPayment"
        ]
      },
      "processingStatus": {
        "description": "Status code indicating the result of a transaction. For the full description corresponding to each status code, refer to the SAP Help Portal.",
        "example": "100",
        "enum": [
          "100",
          "110",
          "201",
          "202",
          "210",
          "211",
          "212",
          "213",
          "220",
          "221",
          "222",
          "299",
          "301",
          "302",
          "311",
          "312",
          "400",
          "401",
          "500",
          "501"
        ],
        "type": "string"
      },
      "dpjslibLoaderResponse": {
        "type": "object",
        "properties": {
          "LoaderUrl": {
            "pattern": "^https://",
            "maxLength": 2000,
            "description": "URL the consumer application shall load into its Web page to include the SAP Digital Payments JavaScript Library (DPJSLIB)",
            "type": "string"
          },
          "APISessionId": {
            "description": "Session identifier required to initialize the SAP Digital Payments JavaScript Library",
            "type": "string"
          }
        },
        "required": [
          "LoaderUrl",
          "APISessionId"
        ]
      },
      "l3Item": {
        "type": "object",
        "properties": {
          "SalesDocumentItem": {
            "minimum": 0,
            "maximum": 999999,
            "description": "Numerical identifier for the current line. Line items do not have to be in order, but the identifier must be unique across the set of items. Identifiers do not have to be consecutive.",
            "example": 1,
            "type": "integer"
          },
          "ProductName": {
            "minLength": 1,
            "maxLength": 80,
            "description": "Textual description of the product or service sold with this item",
            "example": "Sound Station 'Boombox'",
            "type": "string"
          },
          "Product": {
            "minLength": 1,
            "maxLength": 40,
            "description": "Product code or ID (as defined by the merchant) of the product or service sold with this item",
            "example": "426884115",
            "type": "string"
          },
          "UNSPSCCommodityCode": {
            "minLength": 8,
            "maxLength": 10,
            "pattern": "[0-9]{8,10}",
            "description": "Commodity code of this item as specified by the United Nations Standard Products and Services Code (UNSPSC). If this field is not specified, but the PSP requires it, the (invalid) default value '00000000' is applied.",
            "example": "52161521",
            "type": "string"
          },
          "DigitalPaymentSalesDocItmAmt": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "Total amount (quantity multiplied by price per unit) of this item in the business transaction currency (see also 'TransCrcyAlphaISOCode' at transaction level)",
            "example": "140.2",
            "type": "string"
          },
          "DgtlPaytSlsDocItmAmtIsGrssAmt": {
            "description": "Indicator specifying whether all amounts of this item are gross amounts (including taxes) if set to 'true', or net amounts (excluding taxes) if set to 'false'. If not specified, no statement is made as to whether the amounts are gross or net.",
            "example": true,
            "type": "boolean"
          },
          "DigitalPaytSlsDocItmHasDiscAmt": {
            "description": "Indicator specifying whether or not a discount was applied to this item. If not specified, no statement is made as to whether or not a discount was applied. If a non-zero DigitalPaymentDiscountAmount is provided (see below), the DigitalPaymentDiscountAmount takes precedence and this attribute is implicitly set to true, regardless of what the sender has specified.",
            "example": true,
            "type": "boolean"
          },
          "DigitalPaymentDiscountAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "Discount amount applied to this item in the business transaction currency",
            "example": "140.2",
            "type": "string"
          },
          "Quantity": {
            "maxLength": 10,
            "pattern": "0\\.\\d{1,6}|[1-9]\\d*(\\.\\d{1,6})?",
            "description": "The quantity of this item. Must not be zero.",
            "example": "1",
            "type": "string"
          },
          "DigitalPaymentQuantityUnit": {
            "maxLength": 3,
            "pattern": "[A-Z0-9]{2,3}",
            "description": "Unit of measure for this item using an extended variant of Common Codes of UN Recommendation 20, Annex I. For a detailed explanation, refer to the appendix of this specification.",
            "example": "EA",
            "type": "string"
          },
          "DigitalPaymentSlsDocItmUnitPrc": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "Amount per unit of measure for this item in the business transaction currency (see also 'TransCrcyAlphaISOCode' at transaction level). Note that this amount always allows up to 6 decimal places in order to minimize rounding differences, regardless of the transaction currency.",
            "example": "140.2",
            "type": "string"
          },
          "Tax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/l3TaxItem"
            }
          }
        },
        "required": [
          "SalesDocumentItem",
          "ProductName",
          "Product",
          "DigitalPaymentSalesDocItmAmt"
        ]
      },
      "l2L3TransactionLevel": {
        "type": "object",
        "properties": {
          "DigitalPaymentExternalOrder": {
            "maxLength": 25,
            "description": "(Level 2) Business reference provided by the customer describing the transaction performed, such as Purchase Order, Customer Invoice Number, Cost Center, or Project Number",
            "example": "Project Stylophone",
            "type": "string"
          },
          "TransCrcyAlphaISOCode": {
            "minLength": 3,
            "maxLength": 3,
            "description": "(Level 2) Currency code (ISO 4217 using alphabetic notation) in which the business transaction is handled. Usually this is the currency of the underlying order.",
            "example": "EUR",
            "type": "string"
          },
          "TaxAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "(Level 2) Total amount of transaction-based taxes in business transaction currency (see also 'TransCrcyAlphaISOCode').",
            "example": "12.8",
            "type": "string"
          },
          "SalesOrder": {
            "maxLength": 23,
            "pattern": "[-a-zA-Z0-9 /+&%()]{0,23}",
            "description": "(Level 3) Identifier of the sales order as defined by the merchant associated with this transaction",
            "example": "24482",
            "type": "string"
          },
          "SalesOrderDate": {
            "minLength": 10,
            "maxLength": 10,
            "pattern": "[2-9][0-9]{3}-[01][0-9]-[0-3][0-9]",
            "description": "(Level 3) Date on which the sales order of the associated transaction was placed (in the format YYYY-MM-DD)",
            "example": "2018-08-16",
            "type": "string"
          },
          "CustomerInvoice": {
            "maxLength": 23,
            "pattern": "[-a-zA-Z0-9 ./+&%()]{1,23}",
            "description": "(Level 3) Identifier of the invoice as defined by the merchant associated with this transaction",
            "example": "24482",
            "type": "string"
          },
          "DigitalPaymentFreightAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "(Level 3) Freight amount paid for this transaction in business transaction currency (see also 'TransCrcyAlphaISOCode')",
            "example": "8.1",
            "type": "string"
          },
          "DigitalPaymentDutyAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "(Level 3) Amount of import/export duties paid for this transaction in business transaction currency (see also 'TransCrcyAlphaISOCode')",
            "example": "13.6",
            "type": "string"
          },
          "DigitalPaymentDiscountAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "(Level 3) Amount of discount applied for this transaction in business transaction currency (see also 'TransCrcyAlphaISOCode')",
            "example": "1.1",
            "type": "string"
          },
          "ShipToPartyPostalCode": {
            "maxLength": 16,
            "description": "(Level 3) ZIP or other postal code to which the goods are shipped",
            "example": "69190",
            "type": "string"
          },
          "ShipToPartyCountryISO3Code": {
            "minLength": 3,
            "maxLength": 3,
            "description": "(Level 3) Country code (ISO 3166-1, alpha-3) of the country to which the goods are shipped",
            "example": "DEU",
            "type": "string"
          },
          "ShipToPartyRegionISOCode": {
            "minLength": 4,
            "maxLength": 6,
            "description": "(Level 3) State or province to which the goods are shipped. Should be the country subdivision code defined in ISO 3166-2.",
            "example": "DE-BW",
            "type": "string"
          },
          "ShipFromPartyPostalCode": {
            "maxLength": 16,
            "description": "(Level 3) ZIP or other postal code from which the goods are shipped",
            "example": "69190",
            "type": "string"
          },
          "ShipFromPartyCountryISO3Code": {
            "minLength": 3,
            "maxLength": 3,
            "description": "(Level 3) Country code (ISO 3166-1, alpha-3) of the country from which the goods are shipped",
            "example": "DEU",
            "type": "string"
          },
          "DigitalPaymentTaxRateInPercent": {
            "maxLength": 7,
            "pattern": "0|0\\.\\d{1,5}",
            "description": "(Level 3) Tax rate of the total amount of transaction-based taxes using decimal notation (e.g. a rate of 4.25% is written as 0.0425)",
            "example": "0.04",
            "type": "string"
          },
          "L3Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/l3Item"
            }
          }
        },
        "required": [
          "DigitalPaymentExternalOrder",
          "TransCrcyAlphaISOCode",
          "TaxAmount"
        ]
      },
      "l3TaxItem": {
        "type": "object",
        "properties": {
          "DigitalPaymentSlsDocItmTxType": {
            "description": "Identifier indicating the type of tax of this tax item",
            "example": "VALUE_ADDED",
            "enum": [
              "NATIONAL_SALES",
              "STATE_SALES",
              "CITY_SALES",
              "LOCAL_SALES",
              "MUNICIPAL_SALES",
              "VALUE_ADDED",
              "GOODS_AND_SERVICE",
              "PROVINCIAL_SALES",
              "HARMONIZED_SALES",
              "QUEBEC_SALES",
              "COUNTY_OR_PARISH_SALES",
              "COMBINED_STATE_AND_LOCAL_SALES",
              "CITY",
              "COUNTY",
              "ENVIRONMENT",
              "ROOM",
              "OCCUPANCY",
              "ENERGY",
              "OTHER_TAX"
            ],
            "type": "string"
          },
          "DigitalPaymentItmIsTaxExempted": {
            "description": "Indicator showing whether the associated item is exempted from sales and use taxes ('true') or not ('false'). If not specified, defaults to 'false'.",
            "example": false,
            "type": "boolean"
          },
          "DigitalPaymentTaxRateInPercent": {
            "maxLength": 7,
            "pattern": "0|0\\.\\d{1,5}",
            "description": "Tax rate of this line using decimal number notation (e.g. a rate of 4.25% is written as 0.0425)",
            "example": "0.04",
            "type": "string"
          },
          "TaxAmount": {
            "maxLength": 40,
            "pattern": "(0|[1-9]\\d*)(\\.\\d{0,6})?",
            "description": "Amount of tax on this line item in business transaction currency (see also 'TransCrcyAlphaISOCode' at transaction level). Not required if 'DigitalPaymentItmIsTaxExempted' is set to 'true'.",
            "example": "2.9",
            "type": "string"
          }
        },
        "required": [
          "DigitalPaymentSlsDocItmTxType"
        ]
      },
      "fraudRisk": {
        "description": "Status code indicating the result of the fraud check for a transaction. For the full description corresponding to each status code, refer to the SAP Help Portal.",
        "example": "SEVERE",
        "enum": [
          "NONE",
          "ELEVATED",
          "SEVERE",
          "NOT_DETERMINED",
          "ERRONEOUS",
          "CHECK_INACTIVE",
          "ACCEPTED",
          "REJECTED"
        ],
        "type": "string"
      },
      "refundByDPTransRequest": {
        "type": "object",
        "properties": {
          "PaymentByDigitalPaymentService": {
            "maxLength": 44,
            "description": "Unique identifier provided by the SAP digital payments add-on to represent a payment",
            "example": "15e86080494113cfc0a48634e47b4f4d956f0b0381a",
            "type": "string"
          },
          "AmountInRefundCurrency": {
            "maxLength": 40,
            "pattern": "^(0|[1-9]\\d*)(\\.\\d{0,6})?$",
            "description": "Amount to be refunded. The following pattern is used for validation: ^(0|[1-9]\\d*)(\\.\\d{0,6})?$ <br>If no amount and currency are provided, the payment amount of the PaymentByDigitalPaymentService is taken.",
            "example": "123.45",
            "type": "string"
          },
          "RefundCurrency": {
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Za-z]{3}$",
            "description": "Currency code (using ISO 4217) of the amount to be refunded. Send only if an amount to be refunded is provided.",
            "example": "EUR",
            "type": "string"
          },
          "PaymentTransactionDescription": {
            "maxLength": 22,
            "description": "Text that will be displayed in capital letters on a customer's credit card statement (depending on the functionality provided by the PSP). It is advisable to mention your company's name. Maximum length: 22 characters",
            "example": "COMPANY NAME MERCHANT",
            "type": "string"
          },
          "ReferenceDocument": {
            "maxLength": 50,
            "description": "Identifier provided by the consumer application to represent the referenced document",
            "example": "4865448632",
            "type": "string"
          },
          "DigitalPaymentSettlementRef": {
            "maxLength": 16,
            "pattern": "^[A-Z0-9-]{0,16}$",
            "description": "Identifier provided by the consumer application to represent the settlement run",
            "example": "578",
            "type": "string"
          }
        },
        "required": [
          "PaymentByDigitalPaymentService"
        ]
      },
      "refundByDPTransRequests": {
        "type": "object",
        "properties": {
          "Refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/refundByDPTransRequest"
            }
          }
        }
      },
      "paytCardRegnLifeCycleType": {
        "description": "Lifecycle type of a payment card registration. Possible values are:<br>'01' (default): The card may be used for multiple transactions. The caller is responsible for the lifecycle and must delete the card after all transactions have been completed.<br>'02': The card may be deleted by the service as soon as a transaction is completed with the card. The caller is not requested to delete the card.",
        "enum": [
          "01",
          "02"
        ],
        "type": "string"
      },
      "getExpiringResponse": {
        "type": "object",
        "properties": {
          "PaymentCardType": {
            "description": "Four-character code denoting the brand of the payment card. Allowed code values: <br> DPAM - American Express <br> DPVI - VISA <br> DPMC - MasterCard <br> DPDI - Diners Club <br> DPDS - Discover Card [US only] <br> DPJC - JCB <br> PLDC - PINLess Debit Card <br> ACHE - ACH/Electronic Check",
            "example": "DPVI",
            "type": "string"
          },
          "PaymentCardExpirationMonth": {
            "maxLength": 2,
            "description": "Payment card valid-to month",
            "example": "04",
            "type": "string"
          },
          "PaymentCardExpirationYear": {
            "maxLength": 4,
            "description": "Payment card valid-to year",
            "example": "2023",
            "type": "string"
          },
          "PaymentCardMaskedNumber": {
            "description": "Masked representation of a payment card number (PAN) showing only a few digits of the full number",
            "example": "************4823",
            "type": "string"
          },
          "PaymentCardHolderName": {
            "description": "Name of the holder (person or organization) shown on the payment card",
            "example": "John Doe",
            "type": "string"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "PaytCardRegnLifeCycleType": {
            "$ref": "#/components/schemas/paytCardRegnLifeCycleType"
          }
        }
      },
      "getExpiringResponses": {
        "type": "object",
        "properties": {
          "PaymentCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getExpiringResponse"
            }
          }
        }
      },
      "getCardResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "PaymentCardType": {
            "description": "Four-character code denoting the brand of the payment card. Allowed code values: <br> DPAM - American Express <br> DPVI - VISA <br> DPMC - MasterCard <br> DPDI - Diners Club <br> DPDS - Discover Card [US only] <br> DPJC - JCB <br> PLDC - PINLess Debit Card <br> ACHE - ACH/Electronic Check",
            "example": "DPVI",
            "type": "string"
          },
          "PaymentCardExpirationMonth": {
            "maxLength": 2,
            "description": "Payment card valid-to month",
            "example": "04",
            "type": "string"
          },
          "PaymentCardExpirationYear": {
            "maxLength": 4,
            "description": "Payment card valid-to year",
            "example": "2023",
            "type": "string"
          },
          "PaymentCardMaskedNumber": {
            "description": "Masked representation of a payment card number (PAN) showing only a few digits of the full number",
            "example": "************4823",
            "type": "string"
          },
          "PaymentCardHolderName": {
            "description": "Name of the holder (person or organization) shown on the payment card",
            "example": "John Doe",
            "type": "string"
          },
          "PaytCardByDigitalPaymentSrvc": {
            "description": "Payment card token provided by the SAP digital payments add-on. Maximum length: 25 characters",
            "example": "RVWBRS3NCEYDWGAQICCZARES",
            "type": "string"
          },
          "PaytCardRegnLifeCycleType": {
            "$ref": "#/components/schemas/paytCardRegnLifeCycleType"
          }
        }
      },
      "serviceConfigurationResponse": {
        "type": "object",
        "properties": {
          "PaymentMethods": {
            "description": "Payment methods supported by the SAP digital payments add-on",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentMethod"
            }
          },
          "PaymentServiceProviders": {
            "description": "PSPs together with their payment methods as defined in the SAP digital payments add-on",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/paymentServiceProvider"
            }
          }
        }
      },
      "getExternalPaymentsByDPPaymentRequests": {
        "type": "object",
        "properties": {
          "ExternalPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/getExternalPaymentsByDPPaymentRequest"
            }
          }
        }
      },
      "externalPaymentResponses": {
        "type": "object",
        "properties": {
          "ExternalPayments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/externalPaymentResponse"
            }
          }
        }
      },
      "error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the error",
            "type": "string"
          },
          "message": {
            "description": "Human-readable error message",
            "type": "string"
          }
        },
        "required": [
          "id",
          "message"
        ]
      },
      "address": {
        "type": "object",
        "properties": {
          "AddressLine1": {
            "maxLength": 50,
            "description": "First line of the street address or equivalent local portion of the address",
            "example": "Dietmar-Hopp-Allee",
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 50,
            "description": "The second line of the street address or equivalent local portion of the address",
            "example": "16",
            "type": "string"
          },
          "AddressLine3": {
            "maxLength": 50,
            "description": "The third line of the street address or equivalent local portion of the address",
            "example": "",
            "type": "string"
          },
          "PostalCode": {
            "maxLength": 16,
            "description": "The ZIP or other postal code of the address",
            "example": "69190",
            "type": "string"
          },
          "CityName": {
            "maxLength": 50,
            "description": "The name of the city of the address",
            "example": "Walldorf",
            "type": "string"
          },
          "CountryThreeDigitISOCode": {
            "maxLength": 3,
            "description": "The code of the country. It shall be the ISO 3166-1 alphanumeric (sic!) three character country code.",
            "example": "DEU",
            "type": "string"
          },
          "RegionName": {
            "maxLength": 3,
            "description": "The state or province of the address. Should be the country subdivision code defined in ISO 3166-2.",
            "example": "BW",
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "parameters": {
      "trait_routed_CompanyCode": {
        "name": "CompanyCode",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using company code",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_CustomerCountry": {
        "name": "CustomerCountry",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using country of customer",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_PaymentMethod": {
        "name": "PaymentMethod",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using payment method (CC - Credit Card, EP - External Payment)",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_PaymentType": {
        "name": "PaymentType",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using payment type (PP - PayPal) which is a sub-category of the Payment Method",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_RoutingCustomParameterValue": {
        "name": "RoutingCustomParameterValue",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using custom value",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_Currency": {
        "name": "Currency",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using currency",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_CommerceType": {
        "name": "CommerceType",
        "in": "query",
        "description": "Routing parameter to determine the commerce type for payment card registration",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_SessionType": {
        "name": "SessionType",
        "in": "query",
        "description": "Routing parameter to determine the session type for payment card registration",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_PaytCardRegnLifeCycleType": {
        "name": "PaytCardRegnLifeCycleType",
        "in": "query",
        "description": "Defines the lifecycle type of a payment card registration. Possible values are: <br> '01' (default): The card may be used for multiple transactions. The caller is responsible for the lifecycle and must delete the card after all transactions have been completed. <br> '02': The card may be deleted by the service as soon as a transaction is completed with the card. The caller is not requested to delete the card.",
        "schema": {
          "type": "string"
        }
      },
      "trait_routed_DgtlPaytSenderLogicalSystem": {
        "name": "DgtlPaytSenderLogicalSystem",
        "in": "query",
        "description": "Routing parameter to determine PSP and associated merchant ID using the unique identifier of the system sending the request to the SAP digital payments add-on",
        "schema": {
          "maxLength": 20,
          "type": "string"
        }
      }
    },
    "examples": {},
    "requestBodies": {},
    "headers": {},
    "securitySchemes": {},
    "links": {},
    "callbacks": {}
  }
}